/*
 * Copyright (c) 2024 Realtek Semiconductor, Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef ZEPHYR_SOC_ARM_REALTEK_RTS5817_DLINK_SYS_REG_H_
#define ZEPHYR_SOC_ARM_REALTEK_RTS5817_DLINK_SYS_REG_H_

#define DLINK_SYS_BASE_ADDR   0x401e2000
#define R_PHY_RST_CTRL        (DLINK_SYS_BASE_ADDR + 0X0000)
#define R_DLINK_PG_CTRL       (DLINK_SYS_BASE_ADDR + 0X0004)
#define R_DLINK_IN_OUT_CTRL   (DLINK_SYS_BASE_ADDR + 0X0008)
#define R_SLEEP_IN_OUT_CTRL   (DLINK_SYS_BASE_ADDR + 0X000C)
#define R_SUSPEND_IN_OUT_CTRL (DLINK_SYS_BASE_ADDR + 0X0010)
#define R_EXIT_FLAG           (DLINK_SYS_BASE_ADDR + 0X0014)
#define R_NX_MODE             (DLINK_SYS_BASE_ADDR + 0X0018)
#define R_FORCE_OFF_CTRL      (DLINK_SYS_BASE_ADDR + 0X001C)
#define R_SIG_DETECT_CTRL     (DLINK_SYS_BASE_ADDR + 0X0020)
#define R_SENSOR_INT_CFG      (DLINK_SYS_BASE_ADDR + 0X0024)
#define R_SENSOR_INT_FLAG     (DLINK_SYS_BASE_ADDR + 0X0028)
#define R_AL_CACHE_CTRL       (DLINK_SYS_BASE_ADDR + 0X002C)
#define R_SPI_REMAP_OFFSET    (DLINK_SYS_BASE_ADDR + 0X0030)
#define R_FORCE_MCU_RST_CNT   (DLINK_SYS_BASE_ADDR + 0X0034)
#define R_POWER_STATE         (DLINK_SYS_BASE_ADDR + 0X0038)
#define R_DLINK_SCRATCH0      (DLINK_SYS_BASE_ADDR + 0X003C)
#define R_DLINK_SCRATCH1      (DLINK_SYS_BASE_ADDR + 0X0040)
#define R_DLINK_SCRATCH2      (DLINK_SYS_BASE_ADDR + 0X0044)
#define R_DLINK_SCRATCH3      (DLINK_SYS_BASE_ADDR + 0X0048)
#define R_AL_PG_EN            (DLINK_SYS_BASE_ADDR + 0X004C)
#define R_AL_RCOSC_CFG        (DLINK_SYS_BASE_ADDR + 0X0050)
#define R_AL_PG_CNT0          (DLINK_SYS_BASE_ADDR + 0X0054)
#define R_AL_PG_CNT1          (DLINK_SYS_BASE_ADDR + 0X0058)
#define R_AL_SIE_STATE        (DLINK_SYS_BASE_ADDR + 0X005C)
#define R_RC_DEGLITCH_CFG     (DLINK_SYS_BASE_ADDR + 0X0060)
#define R_AL_REXT_CFG         (DLINK_SYS_BASE_ADDR + 0X0064)
#define R_AL_DUMMY0           (DLINK_SYS_BASE_ADDR + 0X0068)
#define R_AL_DUMMY1           (DLINK_SYS_BASE_ADDR + 0X006C)
#define R_AL_GPIO_VALUE       (DLINK_SYS_BASE_ADDR + 0X0070)
#define R_AL_GPIO_CFG         (DLINK_SYS_BASE_ADDR + 0X0074)
#define R_AL_GPIO_IRQ_EN      (DLINK_SYS_BASE_ADDR + 0X0078)
#define R_AL_GPIO_IRQ         (DLINK_SYS_BASE_ADDR + 0X007C)
#define R_AL_SENSOR_RST_CTL   (DLINK_SYS_BASE_ADDR + 0X0080)
#define R_AL_SENSOR_SCS_N_CTL (DLINK_SYS_BASE_ADDR + 0X0084)
#define R_FW_WAKEUP_TRIG      (DLINK_SYS_BASE_ADDR + 0X0088)
#define R_GPIO_SVIO_CFG       (DLINK_SYS_BASE_ADDR + 0X008C)
#define R_INITVTOR            (DLINK_SYS_BASE_ADDR + 0X0090)
#define R_RC_TIMER_CFG        (DLINK_SYS_BASE_ADDR + 0X0094)
#define R_CHIP_SRAM_PG        (DLINK_SYS_BASE_ADDR + 0X0098)
#define R_CHIP_RESET          (DLINK_SYS_BASE_ADDR + 0X0100)
#define R_INITVTOR_CACHE      (DLINK_SYS_BASE_ADDR + 0X0104)
#define R_CACHE_SPI_COMMAND   (DLINK_SYS_BASE_ADDR + 0X0108)
#define R_WORK_MODE           (DLINK_SYS_BASE_ADDR + 0X010C)
#define R_FORCE_SCAN_MODE     (DLINK_SYS_BASE_ADDR + 0X0110)
#define R_SHDN_SVIO_CTRL      (DLINK_SYS_BASE_ADDR + 0X0114)
#define R_SRAM_PCUT           (DLINK_SYS_BASE_ADDR + 0X0118)
#define R_AL_PUF_AUTOLOAD     (DLINK_SYS_BASE_ADDR + 0X011C)
#define R_AL_PG_CNT2          (DLINK_SYS_BASE_ADDR + 0X0120)

/* Bits of R_PHY_RST_CTRL (0X0000) */

#define USB2_PHY_FORCE_RESET_OFFSET 0
#define USB2_PHY_FORCE_RESET_BITS   1
#define USB2_PHY_FORCE_RESET_MASK   (((1 << 1) - 1) << 0)
#define USB2_PHY_FORCE_RESET        (USB2_PHY_FORCE_RESET_MASK)

#define FAST_DOWNLOAD_MODE_OFFSET 1
#define FAST_DOWNLOAD_MODE_BITS   1
#define FAST_DOWNLOAD_MODE_MASK   (((1 << 1) - 1) << 1)
#define FAST_DOWNLOAD_MODE        (FAST_DOWNLOAD_MODE_MASK)

/* Bits of R_DLINK_PG_CTRL (0X0004) */

#define CFG_DLINK_PG_EN_OFFSET 0
#define CFG_DLINK_PG_EN_BITS   1
#define CFG_DLINK_PG_EN_MASK   (((1 << 1) - 1) << 0)
#define CFG_DLINK_PG_EN        (CFG_DLINK_PG_EN_MASK)

#define CFG_HW_WAKEUP_EN_OFFSET 1
#define CFG_HW_WAKEUP_EN_BITS   1
#define CFG_HW_WAKEUP_EN_MASK   (((1 << 1) - 1) << 1)
#define CFG_HW_WAKEUP_EN        (CFG_HW_WAKEUP_EN_MASK)

#define CFG_SLEEP_PG_EN_OFFSET 2
#define CFG_SLEEP_PG_EN_BITS   1
#define CFG_SLEEP_PG_EN_MASK   (((1 << 1) - 1) << 2)
#define CFG_SLEEP_PG_EN        (CFG_SLEEP_PG_EN_MASK)

#define CFG_USB_SPI_MODE_OFFSET 3
#define CFG_USB_SPI_MODE_BITS   1
#define CFG_USB_SPI_MODE_MASK   (((1 << 1) - 1) << 3)
#define CFG_USB_SPI_MODE        (CFG_USB_SPI_MODE_MASK)

#define HW_AUTO_CLR_SU_INT_EN_OFFSET 4
#define HW_AUTO_CLR_SU_INT_EN_BITS   1
#define HW_AUTO_CLR_SU_INT_EN_MASK   (((1 << 1) - 1) << 4)
#define HW_AUTO_CLR_SU_INT_EN        (HW_AUTO_CLR_SU_INT_EN_MASK)

#define CFG_PWD_VALUE_OFFSET 5
#define CFG_PWD_VALUE_BITS   1
#define CFG_PWD_VALUE_MASK   (((1 << 1) - 1) << 5)
#define CFG_PWD_VALUE        (CFG_PWD_VALUE_MASK)

#define CFG_PWD_EN_OFFSET 6
#define CFG_PWD_EN_BITS   1
#define CFG_PWD_EN_MASK   (((1 << 1) - 1) << 6)
#define CFG_PWD_EN        (CFG_PWD_EN_MASK)

#define CFG_PDOWN_VALUE_OFFSET 7
#define CFG_PDOWN_VALUE_BITS   1
#define CFG_PDOWN_VALUE_MASK   (((1 << 1) - 1) << 7)
#define CFG_PDOWN_VALUE        (CFG_PDOWN_VALUE_MASK)

#define CFG_PDOWN_EN_OFFSET 8
#define CFG_PDOWN_EN_BITS   1
#define CFG_PDOWN_EN_MASK   (((1 << 1) - 1) << 8)
#define CFG_PDOWN_EN        (CFG_PDOWN_EN_MASK)

#define CFG_BG_OFF_VALUE_OFFSET 9
#define CFG_BG_OFF_VALUE_BITS   1
#define CFG_BG_OFF_VALUE_MASK   (((1 << 1) - 1) << 9)
#define CFG_BG_OFF_VALUE        (CFG_BG_OFF_VALUE_MASK)

#define CFG_BG_OFF_EN_OFFSET 10
#define CFG_BG_OFF_EN_BITS   1
#define CFG_BG_OFF_EN_MASK   (((1 << 1) - 1) << 10)
#define CFG_BG_OFF_EN        (CFG_BG_OFF_EN_MASK)

#define CFG_REGPWD_VALUE_OFFSET 11
#define CFG_REGPWD_VALUE_BITS   1
#define CFG_REGPWD_VALUE_MASK   (((1 << 1) - 1) << 11)
#define CFG_REGPWD_VALUE        (CFG_REGPWD_VALUE_MASK)

#define CFG_REGPWD_EN_OFFSET 12
#define CFG_REGPWD_EN_BITS   1
#define CFG_REGPWD_EN_MASK   (((1 << 1) - 1) << 12)
#define CFG_REGPWD_EN        (CFG_REGPWD_EN_MASK)

#define CFG_REGRC_VALUE_OFFSET 13
#define CFG_REGRC_VALUE_BITS   1
#define CFG_REGRC_VALUE_MASK   (((1 << 1) - 1) << 13)
#define CFG_REGRC_VALUE        (CFG_REGRC_VALUE_MASK)

#define CFG_REGRC_EN_OFFSET 14
#define CFG_REGRC_EN_BITS   1
#define CFG_REGRC_EN_MASK   (((1 << 1) - 1) << 14)
#define CFG_REGRC_EN        (CFG_REGRC_EN_MASK)

#define CFG_REGOSC_VALUE_OFFSET 15
#define CFG_REGOSC_VALUE_BITS   1
#define CFG_REGOSC_VALUE_MASK   (((1 << 1) - 1) << 15)
#define CFG_REGOSC_VALUE        (CFG_REGOSC_VALUE_MASK)

#define CFG_REGOSC_EN_OFFSET 16
#define CFG_REGOSC_EN_BITS   1
#define CFG_REGOSC_EN_MASK   (((1 << 1) - 1) << 16)
#define CFG_REGOSC_EN        (CFG_REGOSC_EN_MASK)

#define CFG_XTAL_VALUE_OFFSET 17
#define CFG_XTAL_VALUE_BITS   1
#define CFG_XTAL_VALUE_MASK   (((1 << 1) - 1) << 17)
#define CFG_XTAL_VALUE        (CFG_XTAL_VALUE_MASK)

#define CFG_XTAL_EN_OFFSET 18
#define CFG_XTAL_EN_BITS   1
#define CFG_XTAL_EN_MASK   (((1 << 1) - 1) << 18)
#define CFG_XTAL_EN        (CFG_XTAL_EN_MASK)

#define RST_RC_PRE_OFFSET 19
#define RST_RC_PRE_BITS   1
#define RST_RC_PRE_MASK   (((1 << 1) - 1) << 19)
#define RST_RC_PRE        (RST_RC_PRE_MASK)

#define CFG_RST_RC_VALUE_OFFSET 20
#define CFG_RST_RC_VALUE_BITS   1
#define CFG_RST_RC_VALUE_MASK   (((1 << 1) - 1) << 20)
#define CFG_RST_RC_VALUE        (CFG_RST_RC_VALUE_MASK)

#define CFG_RST_RC_OFFSET 21
#define CFG_RST_RC_BITS   1
#define CFG_RST_RC_MASK   (((1 << 1) - 1) << 21)
#define CFG_RST_RC        (CFG_RST_RC_MASK)

#define POW_RC_PRE_OFFSET 22
#define POW_RC_PRE_BITS   1
#define POW_RC_PRE_MASK   (((1 << 1) - 1) << 22)
#define POW_RC_PRE        (POW_RC_PRE_MASK)

#define CFG_POW_RC_VALUE_OFFSET 23
#define CFG_POW_RC_VALUE_BITS   1
#define CFG_POW_RC_VALUE_MASK   (((1 << 1) - 1) << 23)
#define CFG_POW_RC_VALUE        (CFG_POW_RC_VALUE_MASK)

#define CFG_POW_RC_OFFSET 24
#define CFG_POW_RC_BITS   1
#define CFG_POW_RC_MASK   (((1 << 1) - 1) << 24)
#define CFG_POW_RC        (CFG_POW_RC_MASK)

#define CFG_BIAS_VALUE_OFFSET 25
#define CFG_BIAS_VALUE_BITS   1
#define CFG_BIAS_VALUE_MASK   (((1 << 1) - 1) << 25)
#define CFG_BIAS_VALUE        (CFG_BIAS_VALUE_MASK)

#define CFG_BIAS_EN_OFFSET 26
#define CFG_BIAS_EN_BITS   1
#define CFG_BIAS_EN_MASK   (((1 << 1) - 1) << 26)
#define CFG_BIAS_EN        (CFG_BIAS_EN_MASK)

#define CFG_POW_USB2_VALUE_OFFSET 27
#define CFG_POW_USB2_VALUE_BITS   1
#define CFG_POW_USB2_VALUE_MASK   (((1 << 1) - 1) << 27)
#define CFG_POW_USB2_VALUE        (CFG_POW_USB2_VALUE_MASK)

#define CFG_POW_USB2_OFFSET 28
#define CFG_POW_USB2_BITS   1
#define CFG_POW_USB2_MASK   (((1 << 1) - 1) << 28)
#define CFG_POW_USB2        (CFG_POW_USB2_MASK)

#define CFG_PLLEN_VALUE_OFFSET 29
#define CFG_PLLEN_VALUE_BITS   1
#define CFG_PLLEN_VALUE_MASK   (((1 << 1) - 1) << 29)
#define CFG_PLLEN_VALUE        (CFG_PLLEN_VALUE_MASK)

#define CFG_PLLEN_OFFSET 30
#define CFG_PLLEN_BITS   1
#define CFG_PLLEN_MASK   (((1 << 1) - 1) << 30)
#define CFG_PLLEN        (CFG_PLLEN_MASK)

#define CFG_USB2_PG_EN_OFFSET 31
#define CFG_USB2_PG_EN_BITS   1
#define CFG_USB2_PG_EN_MASK   (((1 << 1) - 1) << 31)
#define CFG_USB2_PG_EN        (CFG_USB2_PG_EN_MASK)

/* Bits of R_DLINK_IN_OUT_CTRL (0X0008) */

#define DELINK_FW_ENTER_EN_OFFSET 0
#define DELINK_FW_ENTER_EN_BITS   1
#define DELINK_FW_ENTER_EN_MASK   (((1 << 1) - 1) << 0)
#define DELINK_FW_ENTER_EN        (DELINK_FW_ENTER_EN_MASK)

#define DELINK_GPIO2_EXIT_EN_OFFSET 1
#define DELINK_GPIO2_EXIT_EN_BITS   1
#define DELINK_GPIO2_EXIT_EN_MASK   (((1 << 1) - 1) << 1)
#define DELINK_GPIO2_EXIT_EN        (DELINK_GPIO2_EXIT_EN_MASK)

#define DELINK_GPIO1_EXIT_EN_OFFSET 2
#define DELINK_GPIO1_EXIT_EN_BITS   1
#define DELINK_GPIO1_EXIT_EN_MASK   (((1 << 1) - 1) << 2)
#define DELINK_GPIO1_EXIT_EN        (DELINK_GPIO1_EXIT_EN_MASK)

#define DELINK_GPIO0_EXIT_EN_OFFSET 3
#define DELINK_GPIO0_EXIT_EN_BITS   1
#define DELINK_GPIO0_EXIT_EN_MASK   (((1 << 1) - 1) << 3)
#define DELINK_GPIO0_EXIT_EN        (DELINK_GPIO0_EXIT_EN_MASK)

#define DELINK_SVIO_EXIT_EN_OFFSET 4
#define DELINK_SVIO_EXIT_EN_BITS   1
#define DELINK_SVIO_EXIT_EN_MASK   (((1 << 1) - 1) << 4)
#define DELINK_SVIO_EXIT_EN        (DELINK_SVIO_EXIT_EN_MASK)

#define DELINK_SENSORCS_EXIT_EN_OFFSET 5
#define DELINK_SENSORCS_EXIT_EN_BITS   1
#define DELINK_SENSORCS_EXIT_EN_MASK   (((1 << 1) - 1) << 5)
#define DELINK_SENSORCS_EXIT_EN        (DELINK_SENSORCS_EXIT_EN_MASK)

#define DELINK_WAKEUP2_EXIT_EN_OFFSET 6
#define DELINK_WAKEUP2_EXIT_EN_BITS   1
#define DELINK_WAKEUP2_EXIT_EN_MASK   (((1 << 1) - 1) << 6)
#define DELINK_WAKEUP2_EXIT_EN        (DELINK_WAKEUP2_EXIT_EN_MASK)

#define DELINK_WAKEUP1_EXIT_EN_OFFSET 7
#define DELINK_WAKEUP1_EXIT_EN_BITS   1
#define DELINK_WAKEUP1_EXIT_EN_MASK   (((1 << 1) - 1) << 7)
#define DELINK_WAKEUP1_EXIT_EN        (DELINK_WAKEUP1_EXIT_EN_MASK)

#define DELINK_GPIO2_EXIT_MODE_OFFSET 8
#define DELINK_GPIO2_EXIT_MODE_BITS   2
#define DELINK_GPIO2_EXIT_MODE_MASK   (((1 << 2) - 1) << 8)
#define DELINK_GPIO2_EXIT_MODE        (DELINK_GPIO2_EXIT_MODE_MASK)

#define DELINK_GPIO1_EXIT_MODE_OFFSET 10
#define DELINK_GPIO1_EXIT_MODE_BITS   2
#define DELINK_GPIO1_EXIT_MODE_MASK   (((1 << 2) - 1) << 10)
#define DELINK_GPIO1_EXIT_MODE        (DELINK_GPIO1_EXIT_MODE_MASK)

#define DELINK_GPIO0_EXIT_MODE_OFFSET 12
#define DELINK_GPIO0_EXIT_MODE_BITS   2
#define DELINK_GPIO0_EXIT_MODE_MASK   (((1 << 2) - 1) << 12)
#define DELINK_GPIO0_EXIT_MODE        (DELINK_GPIO0_EXIT_MODE_MASK)

#define DELINK_SVIO_EXIT_MODE_OFFSET 14
#define DELINK_SVIO_EXIT_MODE_BITS   2
#define DELINK_SVIO_EXIT_MODE_MASK   (((1 << 2) - 1) << 14)
#define DELINK_SVIO_EXIT_MODE        (DELINK_SVIO_EXIT_MODE_MASK)

#define DELINK_SENSORCS_EXIT_MODE_OFFSET 16
#define DELINK_SENSORCS_EXIT_MODE_BITS   2
#define DELINK_SENSORCS_EXIT_MODE_MASK   (((1 << 2) - 1) << 16)
#define DELINK_SENSORCS_EXIT_MODE        (DELINK_SENSORCS_EXIT_MODE_MASK)

#define DELINK_WAKEUP2_EXIT_MODE_OFFSET 18
#define DELINK_WAKEUP2_EXIT_MODE_BITS   2
#define DELINK_WAKEUP2_EXIT_MODE_MASK   (((1 << 2) - 1) << 18)
#define DELINK_WAKEUP2_EXIT_MODE        (DELINK_WAKEUP2_EXIT_MODE_MASK)

#define DELINK_WAKEUP1_EXIT_MODE_OFFSET 20
#define DELINK_WAKEUP1_EXIT_MODE_BITS   2
#define DELINK_WAKEUP1_EXIT_MODE_MASK   (((1 << 2) - 1) << 20)
#define DELINK_WAKEUP1_EXIT_MODE        (DELINK_WAKEUP1_EXIT_MODE_MASK)

/* Bits of R_SLEEP_IN_OUT_CTRL (0X000C) */

#define SLEEP_FW_ENTER_EN_OFFSET 0
#define SLEEP_FW_ENTER_EN_BITS   1
#define SLEEP_FW_ENTER_EN_MASK   (((1 << 1) - 1) << 0)
#define SLEEP_FW_ENTER_EN        (SLEEP_FW_ENTER_EN_MASK)

#define SLEEP_GPIO2_EXIT_EN_OFFSET 1
#define SLEEP_GPIO2_EXIT_EN_BITS   1
#define SLEEP_GPIO2_EXIT_EN_MASK   (((1 << 1) - 1) << 1)
#define SLEEP_GPIO2_EXIT_EN        (SLEEP_GPIO2_EXIT_EN_MASK)

#define SLEEP_GPIO1_EXIT_EN_OFFSET 2
#define SLEEP_GPIO1_EXIT_EN_BITS   1
#define SLEEP_GPIO1_EXIT_EN_MASK   (((1 << 1) - 1) << 2)
#define SLEEP_GPIO1_EXIT_EN        (SLEEP_GPIO1_EXIT_EN_MASK)

#define SLEEP_GPIO0_EXIT_EN_OFFSET 3
#define SLEEP_GPIO0_EXIT_EN_BITS   1
#define SLEEP_GPIO0_EXIT_EN_MASK   (((1 << 1) - 1) << 3)
#define SLEEP_GPIO0_EXIT_EN        (SLEEP_GPIO0_EXIT_EN_MASK)

#define SLEEP_SVIO_EXIT_EN_OFFSET 4
#define SLEEP_SVIO_EXIT_EN_BITS   1
#define SLEEP_SVIO_EXIT_EN_MASK   (((1 << 1) - 1) << 4)
#define SLEEP_SVIO_EXIT_EN        (SLEEP_SVIO_EXIT_EN_MASK)

#define SLEEP_SENSORCS_EXIT_EN_OFFSET 5
#define SLEEP_SENSORCS_EXIT_EN_BITS   1
#define SLEEP_SENSORCS_EXIT_EN_MASK   (((1 << 1) - 1) << 5)
#define SLEEP_SENSORCS_EXIT_EN        (SLEEP_SENSORCS_EXIT_EN_MASK)

#define SLEEP_WAKEUP2_EXIT_EN_OFFSET 6
#define SLEEP_WAKEUP2_EXIT_EN_BITS   1
#define SLEEP_WAKEUP2_EXIT_EN_MASK   (((1 << 1) - 1) << 6)
#define SLEEP_WAKEUP2_EXIT_EN        (SLEEP_WAKEUP2_EXIT_EN_MASK)

#define SLEEP_WAKEUP1_EXIT_EN_OFFSET 7
#define SLEEP_WAKEUP1_EXIT_EN_BITS   1
#define SLEEP_WAKEUP1_EXIT_EN_MASK   (((1 << 1) - 1) << 7)
#define SLEEP_WAKEUP1_EXIT_EN        (SLEEP_WAKEUP1_EXIT_EN_MASK)

#define SLEEP_GPIO2_EXIT_MODE_OFFSET 8
#define SLEEP_GPIO2_EXIT_MODE_BITS   2
#define SLEEP_GPIO2_EXIT_MODE_MASK   (((1 << 2) - 1) << 8)
#define SLEEP_GPIO2_EXIT_MODE        (SLEEP_GPIO2_EXIT_MODE_MASK)

#define SLEEP_GPIO1_EXIT_MODE_OFFSET 10
#define SLEEP_GPIO1_EXIT_MODE_BITS   2
#define SLEEP_GPIO1_EXIT_MODE_MASK   (((1 << 2) - 1) << 10)
#define SLEEP_GPIO1_EXIT_MODE        (SLEEP_GPIO1_EXIT_MODE_MASK)

#define SLEEP_GPIO0_EXIT_MODE_OFFSET 12
#define SLEEP_GPIO0_EXIT_MODE_BITS   2
#define SLEEP_GPIO0_EXIT_MODE_MASK   (((1 << 2) - 1) << 12)
#define SLEEP_GPIO0_EXIT_MODE        (SLEEP_GPIO0_EXIT_MODE_MASK)

#define SLEEP_SVIO_EXIT_MODE_OFFSET 14
#define SLEEP_SVIO_EXIT_MODE_BITS   2
#define SLEEP_SVIO_EXIT_MODE_MASK   (((1 << 2) - 1) << 14)
#define SLEEP_SVIO_EXIT_MODE        (SLEEP_SVIO_EXIT_MODE_MASK)

#define SLEEP_SENSORCS_EXIT_MODE_OFFSET 16
#define SLEEP_SENSORCS_EXIT_MODE_BITS   2
#define SLEEP_SENSORCS_EXIT_MODE_MASK   (((1 << 2) - 1) << 16)
#define SLEEP_SENSORCS_EXIT_MODE        (SLEEP_SENSORCS_EXIT_MODE_MASK)

#define SLEEP_WAKEUP2_EXIT_MODE_OFFSET 18
#define SLEEP_WAKEUP2_EXIT_MODE_BITS   2
#define SLEEP_WAKEUP2_EXIT_MODE_MASK   (((1 << 2) - 1) << 18)
#define SLEEP_WAKEUP2_EXIT_MODE        (SLEEP_WAKEUP2_EXIT_MODE_MASK)

#define SLEEP_WAKEUP1_EXIT_MODE_OFFSET 20
#define SLEEP_WAKEUP1_EXIT_MODE_BITS   2
#define SLEEP_WAKEUP1_EXIT_MODE_MASK   (((1 << 2) - 1) << 20)
#define SLEEP_WAKEUP1_EXIT_MODE        (SLEEP_WAKEUP1_EXIT_MODE_MASK)

/* Bits of R_SUSPEND_IN_OUT_CTRL (0X0010) */

#define SUSPEND_GPIO2_EXIT_EN_OFFSET 1
#define SUSPEND_GPIO2_EXIT_EN_BITS   1
#define SUSPEND_GPIO2_EXIT_EN_MASK   (((1 << 1) - 1) << 1)
#define SUSPEND_GPIO2_EXIT_EN        (SUSPEND_GPIO2_EXIT_EN_MASK)

#define SUSPEND_GPIO1_EXIT_EN_OFFSET 2
#define SUSPEND_GPIO1_EXIT_EN_BITS   1
#define SUSPEND_GPIO1_EXIT_EN_MASK   (((1 << 1) - 1) << 2)
#define SUSPEND_GPIO1_EXIT_EN        (SUSPEND_GPIO1_EXIT_EN_MASK)

#define SUSPEND_GPIO0_EXIT_EN_OFFSET 3
#define SUSPEND_GPIO0_EXIT_EN_BITS   1
#define SUSPEND_GPIO0_EXIT_EN_MASK   (((1 << 1) - 1) << 3)
#define SUSPEND_GPIO0_EXIT_EN        (SUSPEND_GPIO0_EXIT_EN_MASK)

#define SUSPEND_SVIO_EXIT_EN_OFFSET 4
#define SUSPEND_SVIO_EXIT_EN_BITS   1
#define SUSPEND_SVIO_EXIT_EN_MASK   (((1 << 1) - 1) << 4)
#define SUSPEND_SVIO_EXIT_EN        (SUSPEND_SVIO_EXIT_EN_MASK)

#define SUSPEND_SENSORCS_EXIT_EN_OFFSET 5
#define SUSPEND_SENSORCS_EXIT_EN_BITS   1
#define SUSPEND_SENSORCS_EXIT_EN_MASK   (((1 << 1) - 1) << 5)
#define SUSPEND_SENSORCS_EXIT_EN        (SUSPEND_SENSORCS_EXIT_EN_MASK)

#define SUSPEND_WAKEUP2_EXIT_EN_OFFSET 6
#define SUSPEND_WAKEUP2_EXIT_EN_BITS   1
#define SUSPEND_WAKEUP2_EXIT_EN_MASK   (((1 << 1) - 1) << 6)
#define SUSPEND_WAKEUP2_EXIT_EN        (SUSPEND_WAKEUP2_EXIT_EN_MASK)

#define SUSPEND_WAKEUP1_EXIT_EN_OFFSET 7
#define SUSPEND_WAKEUP1_EXIT_EN_BITS   1
#define SUSPEND_WAKEUP1_EXIT_EN_MASK   (((1 << 1) - 1) << 7)
#define SUSPEND_WAKEUP1_EXIT_EN        (SUSPEND_WAKEUP1_EXIT_EN_MASK)

#define SUSPEND_GPIO2_EXIT_MODE_OFFSET 8
#define SUSPEND_GPIO2_EXIT_MODE_BITS   2
#define SUSPEND_GPIO2_EXIT_MODE_MASK   (((1 << 2) - 1) << 8)
#define SUSPEND_GPIO2_EXIT_MODE        (SUSPEND_GPIO2_EXIT_MODE_MASK)

#define SUSPEND_GPIO1_EXIT_MODE_OFFSET 10
#define SUSPEND_GPIO1_EXIT_MODE_BITS   2
#define SUSPEND_GPIO1_EXIT_MODE_MASK   (((1 << 2) - 1) << 10)
#define SUSPEND_GPIO1_EXIT_MODE        (SUSPEND_GPIO1_EXIT_MODE_MASK)

#define SUSPEND_GPIO0_EXIT_MODE_OFFSET 12
#define SUSPEND_GPIO0_EXIT_MODE_BITS   2
#define SUSPEND_GPIO0_EXIT_MODE_MASK   (((1 << 2) - 1) << 12)
#define SUSPEND_GPIO0_EXIT_MODE        (SUSPEND_GPIO0_EXIT_MODE_MASK)

#define SUSPEND_SVIO_EXIT_MODE_OFFSET 14
#define SUSPEND_SVIO_EXIT_MODE_BITS   2
#define SUSPEND_SVIO_EXIT_MODE_MASK   (((1 << 2) - 1) << 14)
#define SUSPEND_SVIO_EXIT_MODE        (SUSPEND_SVIO_EXIT_MODE_MASK)

#define SUSPEND_SENSORCS_EXIT_MODE_OFFSET 16
#define SUSPEND_SENSORCS_EXIT_MODE_BITS   2
#define SUSPEND_SENSORCS_EXIT_MODE_MASK   (((1 << 2) - 1) << 16)
#define SUSPEND_SENSORCS_EXIT_MODE        (SUSPEND_SENSORCS_EXIT_MODE_MASK)

#define SUSPEND_WAKEUP2_EXIT_MODE_OFFSET 18
#define SUSPEND_WAKEUP2_EXIT_MODE_BITS   2
#define SUSPEND_WAKEUP2_EXIT_MODE_MASK   (((1 << 2) - 1) << 18)
#define SUSPEND_WAKEUP2_EXIT_MODE        (SUSPEND_WAKEUP2_EXIT_MODE_MASK)

#define SUSPEND_WAKEUP1_EXIT_MODE_OFFSET 20
#define SUSPEND_WAKEUP1_EXIT_MODE_BITS   2
#define SUSPEND_WAKEUP1_EXIT_MODE_MASK   (((1 << 2) - 1) << 20)
#define SUSPEND_WAKEUP1_EXIT_MODE        (SUSPEND_WAKEUP1_EXIT_MODE_MASK)

/* Bits of R_EXIT_FLAG (0X0014) */

#define SLEEP_GPIO2_EXIT_FLAG_OFFSET 0
#define SLEEP_GPIO2_EXIT_FLAG_BITS   1
#define SLEEP_GPIO2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 0)
#define SLEEP_GPIO2_EXIT_FLAG        (SLEEP_GPIO2_EXIT_FLAG_MASK)

#define SLEEP_GPIO1_EXIT_FLAG_OFFSET 1
#define SLEEP_GPIO1_EXIT_FLAG_BITS   1
#define SLEEP_GPIO1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 1)
#define SLEEP_GPIO1_EXIT_FLAG        (SLEEP_GPIO1_EXIT_FLAG_MASK)

#define SLEEP_GPIO0_EXIT_FLAG_OFFSET 2
#define SLEEP_GPIO0_EXIT_FLAG_BITS   1
#define SLEEP_GPIO0_EXIT_FLAG_MASK   (((1 << 1) - 1) << 2)
#define SLEEP_GPIO0_EXIT_FLAG        (SLEEP_GPIO0_EXIT_FLAG_MASK)

#define SLEEP_SVIO_EXIT_FLAG_OFFSET 3
#define SLEEP_SVIO_EXIT_FLAG_BITS   1
#define SLEEP_SVIO_EXIT_FLAG_MASK   (((1 << 1) - 1) << 3)
#define SLEEP_SVIO_EXIT_FLAG        (SLEEP_SVIO_EXIT_FLAG_MASK)

#define SLEEP_SENSORCS_EXIT_FLAG_OFFSET 4
#define SLEEP_SENSORCS_EXIT_FLAG_BITS   1
#define SLEEP_SENSORCS_EXIT_FLAG_MASK   (((1 << 1) - 1) << 4)
#define SLEEP_SENSORCS_EXIT_FLAG        (SLEEP_SENSORCS_EXIT_FLAG_MASK)

#define SLEEP_WAKEUP2_EXIT_FLAG_OFFSET 5
#define SLEEP_WAKEUP2_EXIT_FLAG_BITS   1
#define SLEEP_WAKEUP2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 5)
#define SLEEP_WAKEUP2_EXIT_FLAG        (SLEEP_WAKEUP2_EXIT_FLAG_MASK)

#define SLEEP_WAKEUP1_EXIT_FLAG_OFFSET 6
#define SLEEP_WAKEUP1_EXIT_FLAG_BITS   1
#define SLEEP_WAKEUP1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 6)
#define SLEEP_WAKEUP1_EXIT_FLAG        (SLEEP_WAKEUP1_EXIT_FLAG_MASK)

#define DELINK_GPIO2_EXIT_FLAG_OFFSET 8
#define DELINK_GPIO2_EXIT_FLAG_BITS   1
#define DELINK_GPIO2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 8)
#define DELINK_GPIO2_EXIT_FLAG        (DELINK_GPIO2_EXIT_FLAG_MASK)

#define DELINK_GPIO1_EXIT_FLAG_OFFSET 9
#define DELINK_GPIO1_EXIT_FLAG_BITS   1
#define DELINK_GPIO1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 9)
#define DELINK_GPIO1_EXIT_FLAG        (DELINK_GPIO1_EXIT_FLAG_MASK)

#define DELINK_GPIO0_EXIT_FLAG_OFFSET 10
#define DELINK_GPIO0_EXIT_FLAG_BITS   1
#define DELINK_GPIO0_EXIT_FLAG_MASK   (((1 << 1) - 1) << 10)
#define DELINK_GPIO0_EXIT_FLAG        (DELINK_GPIO0_EXIT_FLAG_MASK)

#define DELINK_SVIO_EXIT_FLAG_OFFSET 11
#define DELINK_SVIO_EXIT_FLAG_BITS   1
#define DELINK_SVIO_EXIT_FLAG_MASK   (((1 << 1) - 1) << 11)
#define DELINK_SVIO_EXIT_FLAG        (DELINK_SVIO_EXIT_FLAG_MASK)

#define DELINK_SENSORCS_EXIT_FLAG_OFFSET 12
#define DELINK_SENSORCS_EXIT_FLAG_BITS   1
#define DELINK_SENSORCS_EXIT_FLAG_MASK   (((1 << 1) - 1) << 12)
#define DELINK_SENSORCS_EXIT_FLAG        (DELINK_SENSORCS_EXIT_FLAG_MASK)

#define DELINK_WAKEUP2_EXIT_FLAG_OFFSET 13
#define DELINK_WAKEUP2_EXIT_FLAG_BITS   1
#define DELINK_WAKEUP2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 13)
#define DELINK_WAKEUP2_EXIT_FLAG        (DELINK_WAKEUP2_EXIT_FLAG_MASK)

#define DELINK_WAKEUP1_EXIT_FLAG_OFFSET 14
#define DELINK_WAKEUP1_EXIT_FLAG_BITS   1
#define DELINK_WAKEUP1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 14)
#define DELINK_WAKEUP1_EXIT_FLAG        (DELINK_WAKEUP1_EXIT_FLAG_MASK)

#define SUSPEND_GPIO2_EXIT_FLAG_OFFSET 16
#define SUSPEND_GPIO2_EXIT_FLAG_BITS   1
#define SUSPEND_GPIO2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 16)
#define SUSPEND_GPIO2_EXIT_FLAG        (SUSPEND_GPIO2_EXIT_FLAG_MASK)

#define SUSPEND_GPIO1_EXIT_FLAG_OFFSET 17
#define SUSPEND_GPIO1_EXIT_FLAG_BITS   1
#define SUSPEND_GPIO1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 17)
#define SUSPEND_GPIO1_EXIT_FLAG        (SUSPEND_GPIO1_EXIT_FLAG_MASK)

#define SUSPEND_GPIO0_EXIT_FLAG_OFFSET 18
#define SUSPEND_GPIO0_EXIT_FLAG_BITS   1
#define SUSPEND_GPIO0_EXIT_FLAG_MASK   (((1 << 1) - 1) << 18)
#define SUSPEND_GPIO0_EXIT_FLAG        (SUSPEND_GPIO0_EXIT_FLAG_MASK)

#define SUSPEND_SVIO_EXIT_FLAG_OFFSET 19
#define SUSPEND_SVIO_EXIT_FLAG_BITS   1
#define SUSPEND_SVIO_EXIT_FLAG_MASK   (((1 << 1) - 1) << 19)
#define SUSPEND_SVIO_EXIT_FLAG        (SUSPEND_SVIO_EXIT_FLAG_MASK)

#define SUSPEND_SENSORCS_EXIT_FLAG_OFFSET 20
#define SUSPEND_SENSORCS_EXIT_FLAG_BITS   1
#define SUSPEND_SENSORCS_EXIT_FLAG_MASK   (((1 << 1) - 1) << 20)
#define SUSPEND_SENSORCS_EXIT_FLAG        (SUSPEND_SENSORCS_EXIT_FLAG_MASK)

#define SUSPEND_WAKEUP2_EXIT_FLAG_OFFSET 21
#define SUSPEND_WAKEUP2_EXIT_FLAG_BITS   1
#define SUSPEND_WAKEUP2_EXIT_FLAG_MASK   (((1 << 1) - 1) << 21)
#define SUSPEND_WAKEUP2_EXIT_FLAG        (SUSPEND_WAKEUP2_EXIT_FLAG_MASK)

#define SUSPEND_WAKEUP1_EXIT_FLAG_OFFSET 22
#define SUSPEND_WAKEUP1_EXIT_FLAG_BITS   1
#define SUSPEND_WAKEUP1_EXIT_FLAG_MASK   (((1 << 1) - 1) << 22)
#define SUSPEND_WAKEUP1_EXIT_FLAG        (SUSPEND_WAKEUP1_EXIT_FLAG_MASK)

#define PAD_EXIT_FLAG_CLR_PRE_OFFSET 31
#define PAD_EXIT_FLAG_CLR_PRE_BITS   1
#define PAD_EXIT_FLAG_CLR_PRE_MASK   (((1 << 1) - 1) << 31)
#define PAD_EXIT_FLAG_CLR_PRE        (PAD_EXIT_FLAG_CLR_PRE_MASK)

/* Bits of R_NX_MODE (0X0018) */

#define FW_CLOCK_MODE_SEL_OFFSET 0
#define FW_CLOCK_MODE_SEL_BITS   1
#define FW_CLOCK_MODE_SEL_MASK   (((1 << 1) - 1) << 0)
#define FW_CLOCK_MODE_SEL        (FW_CLOCK_MODE_SEL_MASK)

#define FORCE_NXTAL_MODE_OFFSET 1
#define FORCE_NXTAL_MODE_BITS   1
#define FORCE_NXTAL_MODE_MASK   (((1 << 1) - 1) << 1)
#define FORCE_NXTAL_MODE        (FORCE_NXTAL_MODE_MASK)

#define FW_CFG_LC_RC_EN_OFFSET 2
#define FW_CFG_LC_RC_EN_BITS   1
#define FW_CFG_LC_RC_EN_MASK   (((1 << 1) - 1) << 2)
#define FW_CFG_LC_RC_EN        (FW_CFG_LC_RC_EN_MASK)

#define REG_XTAL_FREE_OFFSET 3
#define REG_XTAL_FREE_BITS   1
#define REG_XTAL_FREE_MASK   (((1 << 1) - 1) << 3)
#define REG_XTAL_FREE        (REG_XTAL_FREE_MASK)

#define NXTAL_MODE_OFFSET 4
#define NXTAL_MODE_BITS   1
#define NXTAL_MODE_MASK   (((1 << 1) - 1) << 4)
#define NXTAL_MODE        (NXTAL_MODE_MASK)

#define NON_XTAL_SEL_OFFSET 5
#define NON_XTAL_SEL_BITS   1
#define NON_XTAL_SEL_MASK   (((1 << 1) - 1) << 5)
#define NON_XTAL_SEL        (NON_XTAL_SEL_MASK)

/* Bits of R_FORCE_OFF_CTRL (0X001C) */

#define FORCE_RC_OFF_OFFSET 0
#define FORCE_RC_OFF_BITS   1
#define FORCE_RC_OFF_MASK   (((1 << 1) - 1) << 0)
#define FORCE_RC_OFF        (FORCE_RC_OFF_MASK)

#define FORCE_PLL_OFF_OFFSET 1
#define FORCE_PLL_OFF_BITS   1
#define FORCE_PLL_OFF_MASK   (((1 << 1) - 1) << 1)
#define FORCE_PLL_OFF        (FORCE_PLL_OFF_MASK)

#define FORCE_OSC_OFF_OFFSET 2
#define FORCE_OSC_OFF_BITS   1
#define FORCE_OSC_OFF_MASK   (((1 << 1) - 1) << 2)
#define FORCE_OSC_OFF        (FORCE_OSC_OFF_MASK)

#define FORCE_MBIAS_OFF_OFFSET 3
#define FORCE_MBIAS_OFF_BITS   1
#define FORCE_MBIAS_OFF_MASK   (((1 << 1) - 1) << 3)
#define FORCE_MBIAS_OFF        (FORCE_MBIAS_OFF_MASK)

#define FORCE_CLK_OFF_OFFSET 4
#define FORCE_CLK_OFF_BITS   1
#define FORCE_CLK_OFF_MASK   (((1 << 1) - 1) << 4)
#define FORCE_CLK_OFF        (FORCE_CLK_OFF_MASK)

#define FORCE_REGPWD_OFFSET 5
#define FORCE_REGPWD_BITS   1
#define FORCE_REGPWD_MASK   (((1 << 1) - 1) << 5)
#define FORCE_REGPWD        (FORCE_REGPWD_MASK)

#define FORCE_PWD_OFFSET 6
#define FORCE_PWD_BITS   1
#define FORCE_PWD_MASK   (((1 << 1) - 1) << 6)
#define FORCE_PWD        (FORCE_PWD_MASK)

#define FORCE_BG_OFF_OFFSET 7
#define FORCE_BG_OFF_BITS   1
#define FORCE_BG_OFF_MASK   (((1 << 1) - 1) << 7)
#define FORCE_BG_OFF        (FORCE_BG_OFF_MASK)

#define FORCE_PDOWN_OFFSET 8
#define FORCE_PDOWN_BITS   1
#define FORCE_PDOWN_MASK   (((1 << 1) - 1) << 8)
#define FORCE_PDOWN        (FORCE_PDOWN_MASK)

#define FORCE_USB2_TERM_OFFSET 9
#define FORCE_USB2_TERM_BITS   1
#define FORCE_USB2_TERM_MASK   (((1 << 1) - 1) << 9)
#define FORCE_USB2_TERM        (FORCE_USB2_TERM_MASK)

/* Bits of R_SIG_DETECT_CTRL (0X0020) */

#define CFG_SIG_DEGLITCH_OFFSET 0
#define CFG_SIG_DEGLITCH_BITS   8
#define CFG_SIG_DEGLITCH_MASK   (((1 << 8) - 1) << 0)
#define CFG_SIG_DEGLITCH        (CFG_SIG_DEGLITCH_MASK)

/* Bits of R_SENSOR_INT_CFG (0X0024) */

#define IE_SENSOR_INT_OFFSET 0
#define IE_SENSOR_INT_BITS   1
#define IE_SENSOR_INT_MASK   (((1 << 1) - 1) << 0)
#define IE_SENSOR_INT        (IE_SENSOR_INT_MASK)

#define I_SENSOR_PRIORITY_OFFSET 1
#define I_SENSOR_PRIORITY_BITS   1
#define I_SENSOR_PRIORITY_MASK   (((1 << 1) - 1) << 1)
#define I_SENSOR_PRIORITY        (I_SENSOR_PRIORITY_MASK)

#define CFG_SENSOR_INT_POS_EN_OFFSET 2
#define CFG_SENSOR_INT_POS_EN_BITS   2
#define CFG_SENSOR_INT_POS_EN_MASK   (((1 << 2) - 1) << 2)
#define CFG_SENSOR_INT_POS_EN        (CFG_SENSOR_INT_POS_EN_MASK)

#define CFG_SENSOR_INT_NEG_EN_OFFSET 4
#define CFG_SENSOR_INT_NEG_EN_BITS   2
#define CFG_SENSOR_INT_NEG_EN_MASK   (((1 << 2) - 1) << 4)
#define CFG_SENSOR_INT_NEG_EN        (CFG_SENSOR_INT_NEG_EN_MASK)

/* Bits of R_SENSOR_INT_FLAG (0X0028) */

#define I_SENSOR_INTF_FALL_OFFSET 0
#define I_SENSOR_INTF_FALL_BITS   2
#define I_SENSOR_INTF_FALL_MASK   (((1 << 2) - 1) << 0)
#define I_SENSOR_INTF_FALL        (I_SENSOR_INTF_FALL_MASK)

#define I_SENSOR_INTF_RISE_OFFSET 2
#define I_SENSOR_INTF_RISE_BITS   2
#define I_SENSOR_INTF_RISE_MASK   (((1 << 2) - 1) << 2)
#define I_SENSOR_INTF_RISE        (I_SENSOR_INTF_RISE_MASK)

#define I_SENSOR_INTF_OFFSET 4
#define I_SENSOR_INTF_BITS   2
#define I_SENSOR_INTF_MASK   (((1 << 2) - 1) << 4)
#define I_SENSOR_INTF        (I_SENSOR_INTF_MASK)

#define SENSOR_SCS_N_GPIO_INT_FALL_OFFSET 6
#define SENSOR_SCS_N_GPIO_INT_FALL_BITS   1
#define SENSOR_SCS_N_GPIO_INT_FALL_MASK   (((1 << 1) - 1) << 6)
#define SENSOR_SCS_N_GPIO_INT_FALL        (SENSOR_SCS_N_GPIO_INT_FALL_MASK)

#define SENSOR_SCS_N_GPIO_INT_RISE_OFFSET 7
#define SENSOR_SCS_N_GPIO_INT_RISE_BITS   1
#define SENSOR_SCS_N_GPIO_INT_RISE_MASK   (((1 << 1) - 1) << 7)
#define SENSOR_SCS_N_GPIO_INT_RISE        (SENSOR_SCS_N_GPIO_INT_RISE_MASK)

#define GPIO_SVIO_INT_FALL_OFFSET 8
#define GPIO_SVIO_INT_FALL_BITS   1
#define GPIO_SVIO_INT_FALL_MASK   (((1 << 1) - 1) << 8)
#define GPIO_SVIO_INT_FALL        (GPIO_SVIO_INT_FALL_MASK)

#define GPIO_SVIO_INT_RISE_OFFSET 9
#define GPIO_SVIO_INT_RISE_BITS   1
#define GPIO_SVIO_INT_RISE_MASK   (((1 << 1) - 1) << 9)
#define GPIO_SVIO_INT_RISE        (GPIO_SVIO_INT_RISE_MASK)

#define SENSOR_RSTN_GPIO_INT_FALL_OFFSET 10
#define SENSOR_RSTN_GPIO_INT_FALL_BITS   1
#define SENSOR_RSTN_GPIO_INT_FALL_MASK   (((1 << 1) - 1) << 10)
#define SENSOR_RSTN_GPIO_INT_FALL        (SENSOR_RSTN_GPIO_INT_FALL_MASK)

#define SENSOR_RSTN_GPIO_INT_RISE_OFFSET 11
#define SENSOR_RSTN_GPIO_INT_RISE_BITS   1
#define SENSOR_RSTN_GPIO_INT_RISE_MASK   (((1 << 1) - 1) << 11)
#define SENSOR_RSTN_GPIO_INT_RISE        (SENSOR_RSTN_GPIO_INT_RISE_MASK)

#define WAKE_UP_I_OFFSET 16
#define WAKE_UP_I_BITS   2
#define WAKE_UP_I_MASK   (((1 << 2) - 1) << 16)
#define WAKE_UP_I        (WAKE_UP_I_MASK)

/* Bits of R_AL_CACHE_CTRL (0X002C) */

#define SET_CACHE_REBOOT_RC_OFFSET 0
#define SET_CACHE_REBOOT_RC_BITS   1
#define SET_CACHE_REBOOT_RC_MASK   (((1 << 1) - 1) << 0)
#define SET_CACHE_REBOOT_RC        (SET_CACHE_REBOOT_RC_MASK)

#define USE_I2C_OFFSET 1
#define USE_I2C_BITS   1
#define USE_I2C_MASK   (((1 << 1) - 1) << 1)
#define USE_I2C        (USE_I2C_MASK)

#define USE_SPI_OFFSET 2
#define USE_SPI_BITS   1
#define USE_SPI_MASK   (((1 << 1) - 1) << 2)
#define USE_SPI        (USE_SPI_MASK)

#define AUTO_CACHE_MODE_OFFSET 3
#define AUTO_CACHE_MODE_BITS   1
#define AUTO_CACHE_MODE_MASK   (((1 << 1) - 1) << 3)
#define AUTO_CACHE_MODE        (AUTO_CACHE_MODE_MASK)

#define FW_CACHE_MODE_OFFSET 4
#define FW_CACHE_MODE_BITS   1
#define FW_CACHE_MODE_MASK   (((1 << 1) - 1) << 4)
#define FW_CACHE_MODE        (FW_CACHE_MODE_MASK)

#define FW_CACHE_EN_OFFSET 5
#define FW_CACHE_EN_BITS   1
#define FW_CACHE_EN_MASK   (((1 << 1) - 1) << 5)
#define FW_CACHE_EN        (FW_CACHE_EN_MASK)

#define FW_CFG_SWD_MODE_OFFSET 6
#define FW_CFG_SWD_MODE_BITS   1
#define FW_CFG_SWD_MODE_MASK   (((1 << 1) - 1) << 6)
#define FW_CFG_SWD_MODE        (FW_CFG_SWD_MODE_MASK)

#define SPI_REMAP_EN_OFFSET 7
#define SPI_REMAP_EN_BITS   1
#define SPI_REMAP_EN_MASK   (((1 << 1) - 1) << 7)
#define SPI_REMAP_EN        (SPI_REMAP_EN_MASK)

#define MCU_SET_REBOOT_OFFSET 8
#define MCU_SET_REBOOT_BITS   1
#define MCU_SET_REBOOT_MASK   (((1 << 1) - 1) << 8)
#define MCU_SET_REBOOT        (MCU_SET_REBOOT_MASK)

/* Bits of R_SPI_REMAP_OFFSET (0X0030) */

#define SPI_REMAP_OFFSET_PRE_OFFSET 0
#define SPI_REMAP_OFFSET_PRE_BITS   8
#define SPI_REMAP_OFFSET_PRE_MASK   (((1 << 8) - 1) << 0)
#define SPI_REMAP_OFFSET_PRE        (SPI_REMAP_OFFSET_PRE_MASK)

#define SPI_REMAP_OFFSET_OFFSET 8
#define SPI_REMAP_OFFSET_BITS   8
#define SPI_REMAP_OFFSET_MASK   (((1 << 8) - 1) << 8)
#define SPI_REMAP_OFFSET        (SPI_REMAP_OFFSET_MASK)

/* Bits of R_FORCE_MCU_RST_CNT (0X0034) */

#define FORCE_MCU_RST_CNT_MAX_OFFSET 0
#define FORCE_MCU_RST_CNT_MAX_BITS   8
#define FORCE_MCU_RST_CNT_MAX_MASK   (((1 << 8) - 1) << 0)
#define FORCE_MCU_RST_CNT_MAX        (FORCE_MCU_RST_CNT_MAX_MASK)

/* Bits of R_POWER_STATE (0X0038) */

#define POWER_STATE_SET_EN_OFFSET 0
#define POWER_STATE_SET_EN_BITS   1
#define POWER_STATE_SET_EN_MASK   (((1 << 1) - 1) << 0)
#define POWER_STATE_SET_EN        (POWER_STATE_SET_EN_MASK)

#define POWER_STATE_OFFSET 1
#define POWER_STATE_BITS   2
#define POWER_STATE_MASK   (((1 << 2) - 1) << 1)
#define POWER_STATE        (POWER_STATE_MASK)

#define POWER_STATE_CLR_OFFSET 7
#define POWER_STATE_CLR_BITS   1
#define POWER_STATE_CLR_MASK   (((1 << 1) - 1) << 7)
#define POWER_STATE_CLR        (POWER_STATE_CLR_MASK)

/* Bits of R_DLINK_SCRATCH0 (0X003C) */

#define DLINK_SCRATCH_0_OFFSET 0
#define DLINK_SCRATCH_0_BITS   32
#define DLINK_SCRATCH_0_MASK   (((1 << 32) - 1) << 0)
#define DLINK_SCRATCH_0        (DLINK_SCRATCH_0_MASK)

/* Bits of R_DLINK_SCRATCH1 (0X0040) */

#define DLINK_SCRATCH_1_OFFSET 0
#define DLINK_SCRATCH_1_BITS   32
#define DLINK_SCRATCH_1_MASK   (((1 << 32) - 1) << 0)
#define DLINK_SCRATCH_1        (DLINK_SCRATCH_1_MASK)

/* Bits of R_DLINK_SCRATCH2 (0X0044) */

#define DLINK_SCRATCH_2_OFFSET 0
#define DLINK_SCRATCH_2_BITS   32
#define DLINK_SCRATCH_2_MASK   (((1 << 32) - 1) << 0)
#define DLINK_SCRATCH_2        (DLINK_SCRATCH_2_MASK)

/* Bits of R_DLINK_SCRATCH3 (0X0048) */

#define DLINK_SCRATCH_3_OFFSET 0
#define DLINK_SCRATCH_3_BITS   32
#define DLINK_SCRATCH_3_MASK   (((1 << 32) - 1) << 0)
#define DLINK_SCRATCH_3        (DLINK_SCRATCH_3_MASK)

/* Bits of R_AL_PG_EN (0X004C) */

#define ISO_EN_OFFSET 0
#define ISO_EN_BITS   1
#define ISO_EN_MASK   (((1 << 1) - 1) << 0)
#define ISO_EN        (ISO_EN_MASK)

#define DV12S_POWEROFF_EN_OFFSET 1
#define DV12S_POWEROFF_EN_BITS   1
#define DV12S_POWEROFF_EN_MASK   (((1 << 1) - 1) << 1)
#define DV12S_POWEROFF_EN        (DV12S_POWEROFF_EN_MASK)

#define RESUME_RST_EN_OFFSET 2
#define RESUME_RST_EN_BITS   1
#define RESUME_RST_EN_MASK   (((1 << 1) - 1) << 2)
#define RESUME_RST_EN        (RESUME_RST_EN_MASK)

#define PLL_TIMECNT_EN_OFFSET 3
#define PLL_TIMECNT_EN_BITS   1
#define PLL_TIMECNT_EN_MASK   (((1 << 1) - 1) << 3)
#define PLL_TIMECNT_EN        (PLL_TIMECNT_EN_MASK)

#define PLL_SW_ON_EN_OFFSET 4
#define PLL_SW_ON_EN_BITS   1
#define PLL_SW_ON_EN_MASK   (((1 << 1) - 1) << 4)
#define PLL_SW_ON_EN        (PLL_SW_ON_EN_MASK)

#define APHY_HANDLE_EN_OFFSET 5
#define APHY_HANDLE_EN_BITS   1
#define APHY_HANDLE_EN_MASK   (((1 << 1) - 1) << 5)
#define APHY_HANDLE_EN        (APHY_HANDLE_EN_MASK)

#define XDAT_POW_OFF_EN_OFFSET 6
#define XDAT_POW_OFF_EN_BITS   1
#define XDAT_POW_OFF_EN_MASK   (((1 << 1) - 1) << 6)
#define XDAT_POW_OFF_EN        (XDAT_POW_OFF_EN_MASK)

#define XDAT_POW_OFF_EN2_OFFSET 7
#define XDAT_POW_OFF_EN2_BITS   1
#define XDAT_POW_OFF_EN2_MASK   (((1 << 1) - 1) << 7)
#define XDAT_POW_OFF_EN2        (XDAT_POW_OFF_EN2_MASK)

#define XDAT_POW_OFF_EN3_OFFSET 8
#define XDAT_POW_OFF_EN3_BITS   1
#define XDAT_POW_OFF_EN3_MASK   (((1 << 1) - 1) << 8)
#define XDAT_POW_OFF_EN3        (XDAT_POW_OFF_EN3_MASK)

#define PG_STATE_RST_OFFSET 9
#define PG_STATE_RST_BITS   1
#define PG_STATE_RST_MASK   (((1 << 1) - 1) << 9)
#define PG_STATE_RST        (PG_STATE_RST_MASK)

#define PORB_EN_OFFSET 10
#define PORB_EN_BITS   1
#define PORB_EN_MASK   (((1 << 1) - 1) << 10)
#define PORB_EN        (PORB_EN_MASK)

#define RESUME_RC_RST_EN_OFFSET 11
#define RESUME_RC_RST_EN_BITS   1
#define RESUME_RC_RST_EN_MASK   (((1 << 1) - 1) << 11)
#define RESUME_RC_RST_EN        (RESUME_RC_RST_EN_MASK)

/* Bits of R_AL_RCOSC_CFG (0X0050) */

#define RC_OSC_EN_OFFSET 0
#define RC_OSC_EN_BITS   1
#define RC_OSC_EN_MASK   (((1 << 1) - 1) << 0)
#define RC_OSC_EN        (RC_OSC_EN_MASK)

#define RC_DEGLITCH_CFG_OFFSET 1
#define RC_DEGLITCH_CFG_BITS   1
#define RC_DEGLITCH_CFG_MASK   (((1 << 1) - 1) << 1)
#define RC_DEGLITCH_CFG        (RC_DEGLITCH_CFG_MASK)

#define RC_DEGLITCH_EN_OFFSET 2
#define RC_DEGLITCH_EN_BITS   1
#define RC_DEGLITCH_EN_MASK   (((1 << 1) - 1) << 2)
#define RC_DEGLITCH_EN        (RC_DEGLITCH_EN_MASK)

/* Bits of R_AL_PG_CNT0 (0X0054) */

#define PG_RESET_T_OFFSET 0
#define PG_RESET_T_BITS   8
#define PG_RESET_T_MASK   (((1 << 8) - 1) << 0)
#define PG_RESET_T        (PG_RESET_T_MASK)

#define PG_POW0_ON_T_OFFSET 8
#define PG_POW0_ON_T_BITS   8
#define PG_POW0_ON_T_MASK   (((1 << 8) - 1) << 8)
#define PG_POW0_ON_T        (PG_POW0_ON_T_MASK)

#define PG_POW1_ON_T_OFFSET 16
#define PG_POW1_ON_T_BITS   8
#define PG_POW1_ON_T_MASK   (((1 << 8) - 1) << 16)
#define PG_POW1_ON_T        (PG_POW1_ON_T_MASK)

#define PG_LC_ON_T_OFFSET 24
#define PG_LC_ON_T_BITS   8
#define PG_LC_ON_T_MASK   (((1 << 8) - 1) << 24)
#define PG_LC_ON_T        (PG_LC_ON_T_MASK)

/* Bits of R_AL_PG_CNT1 (0X0058) */

#define PG_PLL_ON_T_OFFSET 0
#define PG_PLL_ON_T_BITS   8
#define PG_PLL_ON_T_MASK   (((1 << 8) - 1) << 0)
#define PG_PLL_ON_T        (PG_PLL_ON_T_MASK)

#define PG_ISO_ON_T_OFFSET 8
#define PG_ISO_ON_T_BITS   8
#define PG_ISO_ON_T_MASK   (((1 << 8) - 1) << 8)
#define PG_ISO_ON_T        (PG_ISO_ON_T_MASK)

#define PORB_DLY_T_OFFSET 16
#define PORB_DLY_T_BITS   8
#define PORB_DLY_T_MASK   (((1 << 8) - 1) << 16)
#define PORB_DLY_T        (PORB_DLY_T_MASK)

#define PG_RC_ON_T_OFFSET 24
#define PG_RC_ON_T_BITS   8
#define PG_RC_ON_T_MASK   (((1 << 8) - 1) << 24)
#define PG_RC_ON_T        (PG_RC_ON_T_MASK)

/* Bits of R_AL_SIE_STATE (0X005C) */

#define AL_SIE_DEVADDR_OFFSET 0
#define AL_SIE_DEVADDR_BITS   7
#define AL_SIE_DEVADDR_MASK   (((1 << 7) - 1) << 0)
#define AL_SIE_DEVADDR        (AL_SIE_DEVADDR_MASK)

#define AL_USB_SPEED_OFFSET 7
#define AL_USB_SPEED_BITS   1
#define AL_USB_SPEED_MASK   (((1 << 1) - 1) << 7)
#define AL_USB_SPEED        (AL_USB_SPEED_MASK)

#define AL_CFG_FORCE_FS_JMP_SPD_NEG_FS_OFFSET 8
#define AL_CFG_FORCE_FS_JMP_SPD_NEG_FS_BITS   1
#define AL_CFG_FORCE_FS_JMP_SPD_NEG_FS_MASK   (((1 << 1) - 1) << 8)
#define AL_CFG_FORCE_FS_JMP_SPD_NEG_FS        (AL_CFG_FORCE_FS_JMP_SPD_NEG_FS_MASK)

#define AL_FORCE_FS_OFFSET 9
#define AL_FORCE_FS_BITS   1
#define AL_FORCE_FS_MASK   (((1 << 1) - 1) << 9)
#define AL_FORCE_FS        (AL_FORCE_FS_MASK)

/* Bits of R_RC_DEGLITCH_CFG (0X0060) */

#define RC_DEGLITCH_EDGE_GPIO_AL_OFFSET 0
#define RC_DEGLITCH_EDGE_GPIO_AL_BITS   7
#define RC_DEGLITCH_EDGE_GPIO_AL_MASK   (((1 << 7) - 1) << 0)
#define RC_DEGLITCH_EDGE_GPIO_AL        (RC_DEGLITCH_EDGE_GPIO_AL_MASK)

#define RC_DEGLITCH_GPIO_AL_EN_OFFSET 8
#define RC_DEGLITCH_GPIO_AL_EN_BITS   7
#define RC_DEGLITCH_GPIO_AL_EN_MASK   (((1 << 7) - 1) << 8)
#define RC_DEGLITCH_GPIO_AL_EN        (RC_DEGLITCH_GPIO_AL_EN_MASK)

#define RC_DEGLITCH_COUNT_OFFSET 16
#define RC_DEGLITCH_COUNT_BITS   8
#define RC_DEGLITCH_COUNT_MASK   (((1 << 8) - 1) << 16)
#define RC_DEGLITCH_COUNT        (RC_DEGLITCH_COUNT_MASK)

/* Bits of R_AL_REXT_CFG (0X0064) */

#define CFG_USE_RINT_OFFSET 0
#define CFG_USE_RINT_BITS   1
#define CFG_USE_RINT_MASK   (((1 << 1) - 1) << 0)
#define CFG_USE_RINT        (CFG_USE_RINT_MASK)

/* Bits of R_AL_DUMMY0 (0X0068) */

#define AL_DUMMY0_OFFSET 0
#define AL_DUMMY0_BITS   8
#define AL_DUMMY0_MASK   (((1 << 8) - 1) << 0)
#define AL_DUMMY0        (AL_DUMMY0_MASK)

#define AL_DUMMY1_OFFSET 8
#define AL_DUMMY1_BITS   8
#define AL_DUMMY1_MASK   (((1 << 8) - 1) << 8)
#define AL_DUMMY1        (AL_DUMMY1_MASK)

#define AL_DUMMY2_OFFSET 16
#define AL_DUMMY2_BITS   8
#define AL_DUMMY2_MASK   (((1 << 8) - 1) << 16)
#define AL_DUMMY2        (AL_DUMMY2_MASK)

#define AL_DUMMY3_OFFSET 24
#define AL_DUMMY3_BITS   8
#define AL_DUMMY3_MASK   (((1 << 8) - 1) << 24)
#define AL_DUMMY3        (AL_DUMMY3_MASK)

/* Bits of R_AL_DUMMY1 (0X006C) */

#define AL_DUMMY4_OFFSET 0
#define AL_DUMMY4_BITS   8
#define AL_DUMMY4_MASK   (((1 << 8) - 1) << 0)
#define AL_DUMMY4        (AL_DUMMY4_MASK)

#define AL_DUMMY5_OFFSET 8
#define AL_DUMMY5_BITS   8
#define AL_DUMMY5_MASK   (((1 << 8) - 1) << 8)
#define AL_DUMMY5        (AL_DUMMY5_MASK)

#define AL_DUMMY6_OFFSET 16
#define AL_DUMMY6_BITS   8
#define AL_DUMMY6_MASK   (((1 << 8) - 1) << 16)
#define AL_DUMMY6        (AL_DUMMY6_MASK)

#define AL_DUMMY7_OFFSET 24
#define AL_DUMMY7_BITS   8
#define AL_DUMMY7_MASK   (((1 << 8) - 1) << 24)
#define AL_DUMMY7        (AL_DUMMY7_MASK)

/* Bits of R_AL_GPIO_VALUE (0X0070) */

#define AL_GPIO_O_OFFSET 0
#define AL_GPIO_O_BITS   3
#define AL_GPIO_O_MASK   (((1 << 3) - 1) << 0)
#define AL_GPIO_O        (AL_GPIO_O_MASK)

#define ASYNC_AL_GPIO_IN_OFFSET 3
#define ASYNC_AL_GPIO_IN_BITS   3
#define ASYNC_AL_GPIO_IN_MASK   (((1 << 3) - 1) << 3)
#define ASYNC_AL_GPIO_IN        (ASYNC_AL_GPIO_IN_MASK)

#define AL_GPIO_I_OFFSET 6
#define AL_GPIO_I_BITS   3
#define AL_GPIO_I_MASK   (((1 << 3) - 1) << 6)
#define AL_GPIO_I        (AL_GPIO_I_MASK)

/* Bits of R_AL_GPIO_CFG (0X0074) */

#define AL_GPIO_OE_OFFSET 0
#define AL_GPIO_OE_BITS   3
#define AL_GPIO_OE_MASK   (((1 << 3) - 1) << 0)
#define AL_GPIO_OE        (AL_GPIO_OE_MASK)

#define AL_GPIO_OE2_OFFSET 3
#define AL_GPIO_OE2_BITS   3
#define AL_GPIO_OE2_MASK   (((1 << 3) - 1) << 3)
#define AL_GPIO_OE2        (AL_GPIO_OE2_MASK)

#define AL_GPIO_OE3_OFFSET 8
#define AL_GPIO_OE3_BITS   3
#define AL_GPIO_OE3_MASK   (((1 << 3) - 1) << 8)
#define AL_GPIO_OE3        (AL_GPIO_OE3_MASK)

#define AL_GPIO_SHDN_OFFSET 11
#define AL_GPIO_SHDN_BITS   3
#define AL_GPIO_SHDN_MASK   (((1 << 3) - 1) << 11)
#define AL_GPIO_SHDN        (AL_GPIO_SHDN_MASK)

#define AL_GPIO_IEV18_OFFSET 16
#define AL_GPIO_IEV18_BITS   3
#define AL_GPIO_IEV18_MASK   (((1 << 3) - 1) << 16)
#define AL_GPIO_IEV18        (AL_GPIO_IEV18_MASK)

#define AL_GPIO_PU_CTRL_OFFSET 19
#define AL_GPIO_PU_CTRL_BITS   3
#define AL_GPIO_PU_CTRL_MASK   (((1 << 3) - 1) << 19)
#define AL_GPIO_PU_CTRL        (AL_GPIO_PU_CTRL_MASK)

#define AL_GPIO_PD_CTRL_OFFSET 24
#define AL_GPIO_PD_CTRL_BITS   3
#define AL_GPIO_PD_CTRL_MASK   (((1 << 3) - 1) << 24)
#define AL_GPIO_PD_CTRL        (AL_GPIO_PD_CTRL_MASK)

#define AL_GPIO_SEL_OFFSET 27
#define AL_GPIO_SEL_BITS   3
#define AL_GPIO_SEL_MASK   (((1 << 3) - 1) << 27)
#define AL_GPIO_SEL        (AL_GPIO_SEL_MASK)

#define CS1_BRIDGE_EN_OFFSET 31
#define CS1_BRIDGE_EN_BITS   1
#define CS1_BRIDGE_EN_MASK   (((1 << 1) - 1) << 31)
#define CS1_BRIDGE_EN        (CS1_BRIDGE_EN_MASK)

/* Bits of R_AL_GPIO_IRQ_EN (0X0078) */

#define AL_GPIO_INT_EN_FALL_OFFSET 0
#define AL_GPIO_INT_EN_FALL_BITS   3
#define AL_GPIO_INT_EN_FALL_MASK   (((1 << 3) - 1) << 0)
#define AL_GPIO_INT_EN_FALL        (AL_GPIO_INT_EN_FALL_MASK)

#define AL_GPIO_INT_EN_RISE_OFFSET 3
#define AL_GPIO_INT_EN_RISE_BITS   3
#define AL_GPIO_INT_EN_RISE_MASK   (((1 << 3) - 1) << 3)
#define AL_GPIO_INT_EN_RISE        (AL_GPIO_INT_EN_RISE_MASK)

/* Bits of R_AL_GPIO_IRQ (0X007C) */

#define AL_GPIO_INT_FALL_OFFSET 0
#define AL_GPIO_INT_FALL_BITS   3
#define AL_GPIO_INT_FALL_MASK   (((1 << 3) - 1) << 0)
#define AL_GPIO_INT_FALL        (AL_GPIO_INT_FALL_MASK)

#define AL_GPIO_INT_RISE_OFFSET 3
#define AL_GPIO_INT_RISE_BITS   3
#define AL_GPIO_INT_RISE_MASK   (((1 << 3) - 1) << 3)
#define AL_GPIO_INT_RISE        (AL_GPIO_INT_RISE_MASK)

/* Bits of R_AL_SENSOR_RST_CTL (0X0080) */

#define PAD_SENSOR_RSTN_I_OFFSET 0
#define PAD_SENSOR_RSTN_I_BITS   1
#define PAD_SENSOR_RSTN_I_MASK   (((1 << 1) - 1) << 0)
#define PAD_SENSOR_RSTN_I        (PAD_SENSOR_RSTN_I_MASK)

#define SENSOR_RSTN_O_OFFSET 1
#define SENSOR_RSTN_O_BITS   1
#define SENSOR_RSTN_O_MASK   (((1 << 1) - 1) << 1)
#define SENSOR_RSTN_O        (SENSOR_RSTN_O_MASK)

#define SENSOR_RSTN_OE0_OFFSET 2
#define SENSOR_RSTN_OE0_BITS   1
#define SENSOR_RSTN_OE0_MASK   (((1 << 1) - 1) << 2)
#define SENSOR_RSTN_OE0        (SENSOR_RSTN_OE0_MASK)

#define SENSOR_RSTN_OE2_OFFSET 3
#define SENSOR_RSTN_OE2_BITS   1
#define SENSOR_RSTN_OE2_MASK   (((1 << 1) - 1) << 3)
#define SENSOR_RSTN_OE2        (SENSOR_RSTN_OE2_MASK)

#define SENSOR_RSTN_OE3_OFFSET 4
#define SENSOR_RSTN_OE3_BITS   1
#define SENSOR_RSTN_OE3_MASK   (((1 << 1) - 1) << 4)
#define SENSOR_RSTN_OE3        (SENSOR_RSTN_OE3_MASK)

#define SENSOR_RSTN_IEV18_OFFSET 5
#define SENSOR_RSTN_IEV18_BITS   1
#define SENSOR_RSTN_IEV18_MASK   (((1 << 1) - 1) << 5)
#define SENSOR_RSTN_IEV18        (SENSOR_RSTN_IEV18_MASK)

#define SENSOR_RSTN_H3L1_OFFSET 6
#define SENSOR_RSTN_H3L1_BITS   1
#define SENSOR_RSTN_H3L1_MASK   (((1 << 1) - 1) << 6)
#define SENSOR_RSTN_H3L1        (SENSOR_RSTN_H3L1_MASK)

#define SENSOR_RSTN_PUE_OFFSET 7
#define SENSOR_RSTN_PUE_BITS   1
#define SENSOR_RSTN_PUE_MASK   (((1 << 1) - 1) << 7)
#define SENSOR_RSTN_PUE        (SENSOR_RSTN_PUE_MASK)

#define SENSOR_RSTN_PDE_OFFSET 8
#define SENSOR_RSTN_PDE_BITS   1
#define SENSOR_RSTN_PDE_MASK   (((1 << 1) - 1) << 8)
#define SENSOR_RSTN_PDE        (SENSOR_RSTN_PDE_MASK)

#define SENSOR_RSTN_GPIO_INT_EN_RISE_OFFSET 10
#define SENSOR_RSTN_GPIO_INT_EN_RISE_BITS   1
#define SENSOR_RSTN_GPIO_INT_EN_RISE_MASK   (((1 << 1) - 1) << 10)
#define SENSOR_RSTN_GPIO_INT_EN_RISE        (SENSOR_RSTN_GPIO_INT_EN_RISE_MASK)

#define SENSOR_RSTN_GPIO_INT_EN_FALL_OFFSET 11
#define SENSOR_RSTN_GPIO_INT_EN_FALL_BITS   1
#define SENSOR_RSTN_GPIO_INT_EN_FALL_MASK   (((1 << 1) - 1) << 11)
#define SENSOR_RSTN_GPIO_INT_EN_FALL        (SENSOR_RSTN_GPIO_INT_EN_FALL_MASK)

/* Bits of R_AL_SENSOR_SCS_N_CTL (0X0084) */

#define PAD_SENSOR_SCS_N_I_OFFSET 0
#define PAD_SENSOR_SCS_N_I_BITS   1
#define PAD_SENSOR_SCS_N_I_MASK   (((1 << 1) - 1) << 0)
#define PAD_SENSOR_SCS_N_I        (PAD_SENSOR_SCS_N_I_MASK)

#define SENSOR_SCS_N_O_OFFSET 1
#define SENSOR_SCS_N_O_BITS   1
#define SENSOR_SCS_N_O_MASK   (((1 << 1) - 1) << 1)
#define SENSOR_SCS_N_O        (SENSOR_SCS_N_O_MASK)

#define SENSOR_SCS_N_OE0_OFFSET 2
#define SENSOR_SCS_N_OE0_BITS   1
#define SENSOR_SCS_N_OE0_MASK   (((1 << 1) - 1) << 2)
#define SENSOR_SCS_N_OE0        (SENSOR_SCS_N_OE0_MASK)

#define SENSOR_SCS_N_OE2_OFFSET 3
#define SENSOR_SCS_N_OE2_BITS   1
#define SENSOR_SCS_N_OE2_MASK   (((1 << 1) - 1) << 3)
#define SENSOR_SCS_N_OE2        (SENSOR_SCS_N_OE2_MASK)

#define SENSOR_SCS_N_OE3_OFFSET 4
#define SENSOR_SCS_N_OE3_BITS   1
#define SENSOR_SCS_N_OE3_MASK   (((1 << 1) - 1) << 4)
#define SENSOR_SCS_N_OE3        (SENSOR_SCS_N_OE3_MASK)

#define SENSOR_SCS_N_IEV18_OFFSET 5
#define SENSOR_SCS_N_IEV18_BITS   1
#define SENSOR_SCS_N_IEV18_MASK   (((1 << 1) - 1) << 5)
#define SENSOR_SCS_N_IEV18        (SENSOR_SCS_N_IEV18_MASK)

#define SENSOR_SCS_N_H3L1_OFFSET 6
#define SENSOR_SCS_N_H3L1_BITS   1
#define SENSOR_SCS_N_H3L1_MASK   (((1 << 1) - 1) << 6)
#define SENSOR_SCS_N_H3L1        (SENSOR_SCS_N_H3L1_MASK)

#define SENSOR_SCS_N_PUE_OFFSET 7
#define SENSOR_SCS_N_PUE_BITS   1
#define SENSOR_SCS_N_PUE_MASK   (((1 << 1) - 1) << 7)
#define SENSOR_SCS_N_PUE        (SENSOR_SCS_N_PUE_MASK)

#define SENSOR_SCS_N_PDE_OFFSET 8
#define SENSOR_SCS_N_PDE_BITS   1
#define SENSOR_SCS_N_PDE_MASK   (((1 << 1) - 1) << 8)
#define SENSOR_SCS_N_PDE        (SENSOR_SCS_N_PDE_MASK)

#define SENSOR_SCS_N_SEL_OFFSET 9
#define SENSOR_SCS_N_SEL_BITS   1
#define SENSOR_SCS_N_SEL_MASK   (((1 << 1) - 1) << 9)
#define SENSOR_SCS_N_SEL        (SENSOR_SCS_N_SEL_MASK)

#define SENSOR_SCS_N_GPIO_INT_EN_RISE_OFFSET 10
#define SENSOR_SCS_N_GPIO_INT_EN_RISE_BITS   1
#define SENSOR_SCS_N_GPIO_INT_EN_RISE_MASK   (((1 << 1) - 1) << 10)
#define SENSOR_SCS_N_GPIO_INT_EN_RISE        (SENSOR_SCS_N_GPIO_INT_EN_RISE_MASK)

#define SENSOR_SCS_N_GPIO_INT_EN_FALL_OFFSET 11
#define SENSOR_SCS_N_GPIO_INT_EN_FALL_BITS   1
#define SENSOR_SCS_N_GPIO_INT_EN_FALL_MASK   (((1 << 1) - 1) << 11)
#define SENSOR_SCS_N_GPIO_INT_EN_FALL        (SENSOR_SCS_N_GPIO_INT_EN_FALL_MASK)

/* Bits of R_FW_WAKEUP_TRIG (0X0088) */

#define FW_CLR_WAKEUP_TRIG_OFFSET 0
#define FW_CLR_WAKEUP_TRIG_BITS   1
#define FW_CLR_WAKEUP_TRIG_MASK   (((1 << 1) - 1) << 0)
#define FW_CLR_WAKEUP_TRIG        (FW_CLR_WAKEUP_TRIG_MASK)

#define FW_SET_WAKEUP_TRIG_OFFSET 1
#define FW_SET_WAKEUP_TRIG_BITS   1
#define FW_SET_WAKEUP_TRIG_MASK   (((1 << 1) - 1) << 1)
#define FW_SET_WAKEUP_TRIG        (FW_SET_WAKEUP_TRIG_MASK)

/* Bits of R_GPIO_SVIO_CFG (0X008C) */

#define GPIO_SVIO_I_OFFSET 0
#define GPIO_SVIO_I_BITS   1
#define GPIO_SVIO_I_MASK   (((1 << 1) - 1) << 0)
#define GPIO_SVIO_I        (GPIO_SVIO_I_MASK)

#define GPIO_SVIO_O_OFFSET 1
#define GPIO_SVIO_O_BITS   1
#define GPIO_SVIO_O_MASK   (((1 << 1) - 1) << 1)
#define GPIO_SVIO_O        (GPIO_SVIO_O_MASK)

#define GPIO_SVIO_OE0_OFFSET 2
#define GPIO_SVIO_OE0_BITS   1
#define GPIO_SVIO_OE0_MASK   (((1 << 1) - 1) << 2)
#define GPIO_SVIO_OE0        (GPIO_SVIO_OE0_MASK)

#define GPIO_SVIO_OE2_OFFSET 3
#define GPIO_SVIO_OE2_BITS   1
#define GPIO_SVIO_OE2_MASK   (((1 << 1) - 1) << 3)
#define GPIO_SVIO_OE2        (GPIO_SVIO_OE2_MASK)

#define GPIO_SVIO_OE3_OFFSET 4
#define GPIO_SVIO_OE3_BITS   1
#define GPIO_SVIO_OE3_MASK   (((1 << 1) - 1) << 4)
#define GPIO_SVIO_OE3        (GPIO_SVIO_OE3_MASK)

#define GPIO_SVIO_H3L1_OFFSET 5
#define GPIO_SVIO_H3L1_BITS   1
#define GPIO_SVIO_H3L1_MASK   (((1 << 1) - 1) << 5)
#define GPIO_SVIO_H3L1        (GPIO_SVIO_H3L1_MASK)

#define GPIO_SVIO_IEV18_OFFSET 6
#define GPIO_SVIO_IEV18_BITS   1
#define GPIO_SVIO_IEV18_MASK   (((1 << 1) - 1) << 6)
#define GPIO_SVIO_IEV18        (GPIO_SVIO_IEV18_MASK)

#define GPIO_SVIO_PULLCTL_OFFSET 8
#define GPIO_SVIO_PULLCTL_BITS   2
#define GPIO_SVIO_PULLCTL_MASK   (((1 << 2) - 1) << 8)
#define GPIO_SVIO_PULLCTL        (GPIO_SVIO_PULLCTL_MASK)

#define GPIO_SVIO_INT_EN_RISE_OFFSET 10
#define GPIO_SVIO_INT_EN_RISE_BITS   1
#define GPIO_SVIO_INT_EN_RISE_MASK   (((1 << 1) - 1) << 10)
#define GPIO_SVIO_INT_EN_RISE        (GPIO_SVIO_INT_EN_RISE_MASK)

#define GPIO_SVIO_INT_EN_FALL_OFFSET 11
#define GPIO_SVIO_INT_EN_FALL_BITS   1
#define GPIO_SVIO_INT_EN_FALL_MASK   (((1 << 1) - 1) << 11)
#define GPIO_SVIO_INT_EN_FALL        (GPIO_SVIO_INT_EN_FALL_MASK)

/* Bits of R_INITVTOR (0X0090) */

#define INITVTOR_S_OFFSET 0
#define INITVTOR_S_BITS   32
#define INITVTOR_S_MASK   (((1 << 32) - 1) << 0)
#define INITVTOR_S        (INITVTOR_S_MASK)

/* Bits of R_RC_TIMER_CFG (0X0094) */

#define RC_COUNTER_OFFSET 0
#define RC_COUNTER_BITS   24
#define RC_COUNTER_MASK   (((1 << 24) - 1) << 0)
#define RC_COUNTER        (RC_COUNTER_MASK)

#define RC_TIMER_CLR_OFFSET 24
#define RC_TIMER_CLR_BITS   1
#define RC_TIMER_CLR_MASK   (((1 << 1) - 1) << 24)
#define RC_TIMER_CLR        (RC_TIMER_CLR_MASK)

#define RC_TIMER_EN_OFFSET 25
#define RC_TIMER_EN_BITS   1
#define RC_TIMER_EN_MASK   (((1 << 1) - 1) << 25)
#define RC_TIMER_EN        (RC_TIMER_EN_MASK)

#define RC_TIMER_WAKEUP_FLAG_OFFSET 31
#define RC_TIMER_WAKEUP_FLAG_BITS   1
#define RC_TIMER_WAKEUP_FLAG_MASK   (((1 << 1) - 1) << 31)
#define RC_TIMER_WAKEUP_FLAG        (RC_TIMER_WAKEUP_FLAG_MASK)

/* Bits of R_CHIP_SRAM_PG (0X0098) */

#define FW_CFG_SRAM_64KB_0_DS_OFFSET 0
#define FW_CFG_SRAM_64KB_0_DS_BITS   1
#define FW_CFG_SRAM_64KB_0_DS_MASK   (((1 << 1) - 1) << 0)
#define FW_CFG_SRAM_64KB_0_DS        (FW_CFG_SRAM_64KB_0_DS_MASK)

#define FW_CFG_SRAM_64KB_1_DS_OFFSET 1
#define FW_CFG_SRAM_64KB_1_DS_BITS   1
#define FW_CFG_SRAM_64KB_1_DS_MASK   (((1 << 1) - 1) << 1)
#define FW_CFG_SRAM_64KB_1_DS        (FW_CFG_SRAM_64KB_1_DS_MASK)

#define FW_CFG_SRAM_64KB_2_DS_OFFSET 2
#define FW_CFG_SRAM_64KB_2_DS_BITS   1
#define FW_CFG_SRAM_64KB_2_DS_MASK   (((1 << 1) - 1) << 2)
#define FW_CFG_SRAM_64KB_2_DS        (FW_CFG_SRAM_64KB_2_DS_MASK)

#define FW_CFG_SRAM_32KB_DS_OFFSET 3
#define FW_CFG_SRAM_32KB_DS_BITS   1
#define FW_CFG_SRAM_32KB_DS_MASK   (((1 << 1) - 1) << 3)
#define FW_CFG_SRAM_32KB_DS        (FW_CFG_SRAM_32KB_DS_MASK)

#define FW_CFG_SRAM_16KB_0_DS_OFFSET 4
#define FW_CFG_SRAM_16KB_0_DS_BITS   1
#define FW_CFG_SRAM_16KB_0_DS_MASK   (((1 << 1) - 1) << 4)
#define FW_CFG_SRAM_16KB_0_DS        (FW_CFG_SRAM_16KB_0_DS_MASK)

#define FW_CFG_SRAM_16KB_1_DS_OFFSET 5
#define FW_CFG_SRAM_16KB_1_DS_BITS   1
#define FW_CFG_SRAM_16KB_1_DS_MASK   (((1 << 1) - 1) << 5)
#define FW_CFG_SRAM_16KB_1_DS        (FW_CFG_SRAM_16KB_1_DS_MASK)

#define FW_CFG_SRAM_64KB_0_SD_OFFSET 8
#define FW_CFG_SRAM_64KB_0_SD_BITS   1
#define FW_CFG_SRAM_64KB_0_SD_MASK   (((1 << 1) - 1) << 8)
#define FW_CFG_SRAM_64KB_0_SD        (FW_CFG_SRAM_64KB_0_SD_MASK)

#define FW_CFG_SRAM_64KB_1_SD_OFFSET 9
#define FW_CFG_SRAM_64KB_1_SD_BITS   1
#define FW_CFG_SRAM_64KB_1_SD_MASK   (((1 << 1) - 1) << 9)
#define FW_CFG_SRAM_64KB_1_SD        (FW_CFG_SRAM_64KB_1_SD_MASK)

#define FW_CFG_SRAM_64KB_2_SD_OFFSET 10
#define FW_CFG_SRAM_64KB_2_SD_BITS   1
#define FW_CFG_SRAM_64KB_2_SD_MASK   (((1 << 1) - 1) << 10)
#define FW_CFG_SRAM_64KB_2_SD        (FW_CFG_SRAM_64KB_2_SD_MASK)

#define FW_CFG_SRAM_32KB_SD_OFFSET 11
#define FW_CFG_SRAM_32KB_SD_BITS   1
#define FW_CFG_SRAM_32KB_SD_MASK   (((1 << 1) - 1) << 11)
#define FW_CFG_SRAM_32KB_SD        (FW_CFG_SRAM_32KB_SD_MASK)

#define FW_CFG_SRAM_16KB_0_SD_OFFSET 12
#define FW_CFG_SRAM_16KB_0_SD_BITS   1
#define FW_CFG_SRAM_16KB_0_SD_MASK   (((1 << 1) - 1) << 12)
#define FW_CFG_SRAM_16KB_0_SD        (FW_CFG_SRAM_16KB_0_SD_MASK)

#define FW_CFG_SRAM_16KB_1_SD_OFFSET 13
#define FW_CFG_SRAM_16KB_1_SD_BITS   1
#define FW_CFG_SRAM_16KB_1_SD_MASK   (((1 << 1) - 1) << 13)
#define FW_CFG_SRAM_16KB_1_SD        (FW_CFG_SRAM_16KB_1_SD_MASK)

#define FW_CFG_SUS_SRAM_64KB_0_DS_OFFSET 16
#define FW_CFG_SUS_SRAM_64KB_0_DS_BITS   1
#define FW_CFG_SUS_SRAM_64KB_0_DS_MASK   (((1 << 1) - 1) << 16)
#define FW_CFG_SUS_SRAM_64KB_0_DS        (FW_CFG_SUS_SRAM_64KB_0_DS_MASK)

#define FW_CFG_SUS_SRAM_64KB_1_DS_OFFSET 17
#define FW_CFG_SUS_SRAM_64KB_1_DS_BITS   1
#define FW_CFG_SUS_SRAM_64KB_1_DS_MASK   (((1 << 1) - 1) << 17)
#define FW_CFG_SUS_SRAM_64KB_1_DS        (FW_CFG_SUS_SRAM_64KB_1_DS_MASK)

#define FW_CFG_SUS_SRAM_64KB_2_DS_OFFSET 18
#define FW_CFG_SUS_SRAM_64KB_2_DS_BITS   1
#define FW_CFG_SUS_SRAM_64KB_2_DS_MASK   (((1 << 1) - 1) << 18)
#define FW_CFG_SUS_SRAM_64KB_2_DS        (FW_CFG_SUS_SRAM_64KB_2_DS_MASK)

#define FW_CFG_SUS_SRAM_32KB_DS_OFFSET 19
#define FW_CFG_SUS_SRAM_32KB_DS_BITS   1
#define FW_CFG_SUS_SRAM_32KB_DS_MASK   (((1 << 1) - 1) << 19)
#define FW_CFG_SUS_SRAM_32KB_DS        (FW_CFG_SUS_SRAM_32KB_DS_MASK)

#define FW_CFG_SUS_SRAM_16KB_0_DS_OFFSET 20
#define FW_CFG_SUS_SRAM_16KB_0_DS_BITS   1
#define FW_CFG_SUS_SRAM_16KB_0_DS_MASK   (((1 << 1) - 1) << 20)
#define FW_CFG_SUS_SRAM_16KB_0_DS        (FW_CFG_SUS_SRAM_16KB_0_DS_MASK)

#define FW_CFG_SUS_SRAM_16KB_1_DS_OFFSET 21
#define FW_CFG_SUS_SRAM_16KB_1_DS_BITS   1
#define FW_CFG_SUS_SRAM_16KB_1_DS_MASK   (((1 << 1) - 1) << 21)
#define FW_CFG_SUS_SRAM_16KB_1_DS        (FW_CFG_SUS_SRAM_16KB_1_DS_MASK)

#define FW_CFG_SUS_SRAM_64KB_0_SD_OFFSET 24
#define FW_CFG_SUS_SRAM_64KB_0_SD_BITS   1
#define FW_CFG_SUS_SRAM_64KB_0_SD_MASK   (((1 << 1) - 1) << 24)
#define FW_CFG_SUS_SRAM_64KB_0_SD        (FW_CFG_SUS_SRAM_64KB_0_SD_MASK)

#define FW_CFG_SUS_SRAM_64KB_1_SD_OFFSET 25
#define FW_CFG_SUS_SRAM_64KB_1_SD_BITS   1
#define FW_CFG_SUS_SRAM_64KB_1_SD_MASK   (((1 << 1) - 1) << 25)
#define FW_CFG_SUS_SRAM_64KB_1_SD        (FW_CFG_SUS_SRAM_64KB_1_SD_MASK)

#define FW_CFG_SUS_SRAM_64KB_2_SD_OFFSET 26
#define FW_CFG_SUS_SRAM_64KB_2_SD_BITS   1
#define FW_CFG_SUS_SRAM_64KB_2_SD_MASK   (((1 << 1) - 1) << 26)
#define FW_CFG_SUS_SRAM_64KB_2_SD        (FW_CFG_SUS_SRAM_64KB_2_SD_MASK)

#define FW_CFG_SUS_SRAM_32KB_SD_OFFSET 27
#define FW_CFG_SUS_SRAM_32KB_SD_BITS   1
#define FW_CFG_SUS_SRAM_32KB_SD_MASK   (((1 << 1) - 1) << 27)
#define FW_CFG_SUS_SRAM_32KB_SD        (FW_CFG_SUS_SRAM_32KB_SD_MASK)

#define FW_CFG_SUS_SRAM_16KB_0_SD_OFFSET 28
#define FW_CFG_SUS_SRAM_16KB_0_SD_BITS   1
#define FW_CFG_SUS_SRAM_16KB_0_SD_MASK   (((1 << 1) - 1) << 28)
#define FW_CFG_SUS_SRAM_16KB_0_SD        (FW_CFG_SUS_SRAM_16KB_0_SD_MASK)

#define FW_CFG_SUS_SRAM_16KB_1_SD_OFFSET 29
#define FW_CFG_SUS_SRAM_16KB_1_SD_BITS   1
#define FW_CFG_SUS_SRAM_16KB_1_SD_MASK   (((1 << 1) - 1) << 29)
#define FW_CFG_SUS_SRAM_16KB_1_SD        (FW_CFG_SUS_SRAM_16KB_1_SD_MASK)

/* Bits of R_CHIP_RESET (0X0100) */

#define CHIP_RESET_FLAG_OFFSET 0
#define CHIP_RESET_FLAG_BITS   1
#define CHIP_RESET_FLAG_MASK   (((1 << 1) - 1) << 0)
#define CHIP_RESET_FLAG        (CHIP_RESET_FLAG_MASK)

#define CFG_FW_FORCE_RESET_OFFSET 1
#define CFG_FW_FORCE_RESET_BITS   1
#define CFG_FW_FORCE_RESET_MASK   (((1 << 1) - 1) << 1)
#define CFG_FW_FORCE_RESET        (CFG_FW_FORCE_RESET_MASK)

#define BUS_RESET_FLAG_OFFSET 8
#define BUS_RESET_FLAG_BITS   1
#define BUS_RESET_FLAG_MASK   (((1 << 1) - 1) << 8)
#define BUS_RESET_FLAG        (BUS_RESET_FLAG_MASK)

#define FORCE_REMAP_RST_OFFSET 9
#define FORCE_REMAP_RST_BITS   1
#define FORCE_REMAP_RST_MASK   (((1 << 1) - 1) << 9)
#define FORCE_REMAP_RST        (FORCE_REMAP_RST_MASK)

#define FORCE_REMAP1_RST_OFFSET 11
#define FORCE_REMAP1_RST_BITS   1
#define FORCE_REMAP1_RST_MASK   (((1 << 1) - 1) << 11)
#define FORCE_REMAP1_RST        (FORCE_REMAP1_RST_MASK)

/* Bits of R_INITVTOR_CACHE (0X0104) */

#define CACHE_INITVTOR_S_REG_OFFSET 0
#define CACHE_INITVTOR_S_REG_BITS   32
#define CACHE_INITVTOR_S_REG_MASK   (((1 << 32) - 1) << 0)
#define CACHE_INITVTOR_S_REG        (CACHE_INITVTOR_S_REG_MASK)

/* Bits of R_CACHE_SPI_COMMAND (0X0108) */

#define CACHE_SPI_CMD_OFFSET 0
#define CACHE_SPI_CMD_BITS   8
#define CACHE_SPI_CMD_MASK   (((1 << 8) - 1) << 0)
#define CACHE_SPI_CMD        (CACHE_SPI_CMD_MASK)

#define CACHE_SPI_AUTOMODE_TRANSFER_MODE_OFFSET 8
#define CACHE_SPI_AUTOMODE_TRANSFER_MODE_BITS   4
#define CACHE_SPI_AUTOMODE_TRANSFER_MODE_MASK   (((1 << 4) - 1) << 8)
#define CACHE_SPI_AUTOMODE_TRANSFER_MODE        (CACHE_SPI_AUTOMODE_TRANSFER_MODE_MASK)

#define CACHE_A_SPI_DUM_BIT_NUM_OFFSET 16
#define CACHE_A_SPI_DUM_BIT_NUM_BITS   5
#define CACHE_A_SPI_DUM_BIT_NUM_MASK   (((1 << 5) - 1) << 16)
#define CACHE_A_SPI_DUM_BIT_NUM        (CACHE_A_SPI_DUM_BIT_NUM_MASK)

/* Bits of R_WORK_MODE (0X010C) */

#define MODE_IN_OFFSET 0
#define MODE_IN_BITS   3
#define MODE_IN_MASK   (((1 << 3) - 1) << 0)
#define MODE_IN        (MODE_IN_MASK)

/* Bits of R_FORCE_SCAN_MODE (0X0110) */

#define FORCE_SCAN_MODE_OFFSET 0
#define FORCE_SCAN_MODE_BITS   1
#define FORCE_SCAN_MODE_MASK   (((1 << 1) - 1) << 0)
#define FORCE_SCAN_MODE        (FORCE_SCAN_MODE_MASK)

/* Bits of R_SHDN_SVIO_CTRL (0X0114) */

#define SHDN_SVIO_CTRL_OFFSET 0
#define SHDN_SVIO_CTRL_BITS   1
#define SHDN_SVIO_CTRL_MASK   (((1 << 1) - 1) << 0)
#define SHDN_SVIO_CTRL        (SHDN_SVIO_CTRL_MASK)

/* Bits of R_SRAM_PCUT (0X0118) */

#define PCUT_SRAM16KBX2_OFFSET 0
#define PCUT_SRAM16KBX2_BITS   1
#define PCUT_SRAM16KBX2_MASK   (((1 << 1) - 1) << 0)
#define PCUT_SRAM16KBX2        (PCUT_SRAM16KBX2_MASK)

#define PCUT_PDSRAM32KB_OFFSET 1
#define PCUT_PDSRAM32KB_BITS   1
#define PCUT_PDSRAM32KB_MASK   (((1 << 1) - 1) << 1)
#define PCUT_PDSRAM32KB        (PCUT_PDSRAM32KB_MASK)

#define PCUT_PDSRAM64KBX3_OFFSET 2
#define PCUT_PDSRAM64KBX3_BITS   1
#define PCUT_PDSRAM64KBX3_MASK   (((1 << 1) - 1) << 2)
#define PCUT_PDSRAM64KBX3        (PCUT_PDSRAM64KBX3_MASK)

/* Bits of R_AL_PUF_AUTOLOAD (0X011C) */

#define AUTOLD_OTP_32BITS_OFFSET 0
#define AUTOLD_OTP_32BITS_BITS   32
#define AUTOLD_OTP_32BITS_MASK   (((1 << 32) - 1) << 0)
#define AUTOLD_OTP_32BITS        (AUTOLD_OTP_32BITS_MASK)

/* Bits of R_AL_PG_CNT2 (0X0120) */

#define PG_PWR_DOWN0_T_OFFSET 0
#define PG_PWR_DOWN0_T_BITS   8
#define PG_PWR_DOWN0_T_MASK   (((1 << 8) - 1) << 0)
#define PG_PWR_DOWN0_T        (PG_PWR_DOWN0_T_MASK)

#define PG_PWR_DOWN1_T_OFFSET 8
#define PG_PWR_DOWN1_T_BITS   8
#define PG_PWR_DOWN1_T_MASK   (((1 << 8) - 1) << 8)
#define PG_PWR_DOWN1_T        (PG_PWR_DOWN1_T_MASK)

/* Parameters definition */

/* Parameters of R_DLINK_IN_OUT_CTRL (0X0008) */
#define DELINK_EXIT_EN_MASK                                                                        \
	DELINK_GPIO2_EXIT_EN_MASK | DELINK_GPIO1_EXIT_EN_MASK | DELINK_GPIO0_EXIT_EN_MASK |        \
		DELINK_SVIO_EXIT_EN_MASK | DELINK_SENSORCS_EXIT_EN_MASK |                          \
		DELINK_WAKEUP1_EXIT_EN_MASK | DELINK_WAKEUP2_EXIT_EN_MASK

#define DELINK_EXIT_MODE_MASK                                                                      \
	DELINK_GPIO2_EXIT_MODE_MASK | DELINK_GPIO1_EXIT_MODE_MASK | DELINK_GPIO0_EXIT_MODE_MASK |  \
		DELINK_SVIO_EXIT_MODE_MASK | DELINK_SENSORCS_EXIT_MODE_MASK |                      \
		DELINK_WAKEUP1_EXIT_MODE_MASK | DELINK_WAKEUP2_EXIT_MODE_MASK

/* Parameters of R_SUSPEND_IN_OUT_CTRL (0X0010) */
#define SUSPEND_EXIT_EN_MASK                                                                       \
	SUSPEND_GPIO2_EXIT_EN_MASK | SUSPEND_GPIO1_EXIT_EN_MASK | SUSPEND_GPIO0_EXIT_EN_MASK |     \
		SUSPEND_SVIO_EXIT_EN_MASK | SUSPEND_SENSORCS_EXIT_EN_MASK |                        \
		SUSPEND_WAKEUP1_EXIT_EN_MASK | SUSPEND_WAKEUP2_EXIT_EN_MASK

#define SUSPEND_EXIT_MODE_MASK                                                                     \
	SUSPEND_GPIO2_EXIT_MODE_MASK | SUSPEND_GPIO1_EXIT_MODE_MASK |                              \
		SUSPEND_GPIO0_EXIT_MODE_MASK | SUSPEND_SVIO_EXIT_MODE_MASK |                       \
		SUSPEND_SENSORCS_EXIT_MODE_MASK | SUSPEND_WAKEUP1_EXIT_MODE_MASK |                 \
		SUSPEND_WAKEUP2_EXIT_MODE_MASK

/* Parameters of R_SLEEP_IN_OUT_CTRL (0X000C) */
#define SLEEP_EXIT_EN_MASK                                                                         \
	SLEEP_GPIO2_EXIT_EN_MASK | SLEEP_GPIO1_EXIT_EN_MASK | SLEEP_GPIO0_EXIT_EN_MASK |           \
		SLEEP_SVIO_EXIT_EN_MASK | SLEEP_SENSORCS_EXIT_EN_MASK |                            \
		SLEEP_WAKEUP1_EXIT_EN_MASK | SLEEP_WAKEUP2_EXIT_EN_MASK

/* Parameters of R_EXIT_FLAG (0X0014) */
#define SUSPEND_EXIT_FLAG_MASK                                                                     \
	SUSPEND_GPIO2_EXIT_FLAG_MASK | SUSPEND_GPIO1_EXIT_FLAG_MASK |                              \
		SUSPEND_GPIO0_EXIT_FLAG_MASK | SUSPEND_SVIO_EXIT_FLAG_MASK |                       \
		SUSPEND_SENSORCS_EXIT_FLAG_MASK | SUSPEND_WAKEUP1_EXIT_FLAG_MASK |                 \
		SUSPEND_WAKEUP2_EXIT_FLAG_MASK

#define DELINK_EXIT_FLAG_MASK                                                                      \
	DELINK_GPIO2_EXIT_FLAG_MASK | DELINK_GPIO1_EXIT_FLAG_MASK | DELINK_GPIO0_EXIT_FLAG_MASK |  \
		DELINK_SVIO_EXIT_FLAG_MASK | DELINK_SENSORCS_EXIT_FLAG_MASK |                      \
		DELINK_WAKEUP1_EXIT_FLAG_MASK | DELINK_WAKEUP2_EXIT_FLAG_MASK

#define SLEEP_EXIT_FLAG_MASK                                                                       \
	SLEEP_GPIO2_EXIT_FLAG_MASK | SLEEP_GPIO1_EXIT_FLAG_MASK | SLEEP_GPIO0_EXIT_FLAG_MASK |     \
		SLEEP_SVIO_EXIT_FLAG_MASK | SLEEP_SENSORCS_EXIT_FLAG_MASK |                        \
		SLEEP_WAKEUP1_EXIT_FLAG_MASK | SLEEP_WAKEUP2_EXIT_FLAG_MASK

/* Bits of R_RC_DEGLITCH_CFG (0X0060) */

#define RC_DEGLITCH_EDGE_GPIO_AL0   BIT(0)
#define RC_DEGLITCH_EDGE_GPIO_AL1   BIT(1)
#define RC_DEGLITCH_EDGE_GPIO_AL2   BIT(2)
#define RC_DEGLITCH_EDGE_GPIO_WAKE1 BIT(3)
#define RC_DEGLITCH_EDGE_GPIO_WAKE2 BIT(4)
#define RC_DEGLITCH_EDGE_GPIO_SNRCS BIT(5)
#define RC_DEGLITCH_EDGE_GPIO_SSOR  BIT(6)

#define RC_DEGLITCH_GPIO_AL0_EN   BIT(8)
#define RC_DEGLITCH_GPIO_AL1_EN   BIT(9)
#define RC_DEGLITCH_GPIO_AL2_EN   BIT(10)
#define RC_DEGLITCH_GPIO_WAKE1_EN BIT(11)
#define RC_DEGLITCH_GPIO_WAKE2_EN BIT(12)
#define RC_DEGLITCH_GPIO_SNRCS_EN BIT(13)
#define RC_DEGLITCH_GPIO_SSOR_EN  BIT(14)

/* parameters of R_CHIP_SRAM_PG (0X0098) */

#define SRAM_SUS_DS_MASK                                                                           \
	FW_CFG_SUS_SRAM_16KB_0_DS_MASK | FW_CFG_SUS_SRAM_16KB_1_DS_MASK |                          \
		FW_CFG_SUS_SRAM_32KB_DS_MASK | FW_CFG_SUS_SRAM_64KB_0_DS_MASK |                    \
		FW_CFG_SUS_SRAM_64KB_1_DS_MASK | FW_CFG_SUS_SRAM_64KB_2_DS_MASK

#define SRAM_SUS_SD_MASK                                                                           \
	FW_CFG_SUS_SRAM_16KB_0_SD_MASK | FW_CFG_SUS_SRAM_16KB_1_SD_MASK |                          \
		FW_CFG_SUS_SRAM_32KB_SD_MASK | FW_CFG_SUS_SRAM_64KB_0_SD_MASK |                    \
		FW_CFG_SUS_SRAM_64KB_1_SD_MASK | FW_CFG_SUS_SRAM_64KB_2_SD_MASK

#define SRAM_64KX3_PCUT_MASK                                                                       \
	(FW_CFG_SUS_SRAM_64KB_0_SD_MASK | FW_CFG_SUS_SRAM_64KB_1_SD_MASK |                         \
	 FW_CFG_SUS_SRAM_64KB_2_SD_MASK)

#define SRAM_32KX1_PCUT_MASK (FW_CFG_SUS_SRAM_32KB_SD_MASK)

#define SRAM_16KX2_PCUT_MASK (FW_CFG_SUS_SRAM_16KB_0_SD_MASK | FW_CFG_SUS_SRAM_16KB_1_SD_MASK)

#define SRAM_NORMAL_DS_MASK                                                                        \
	FW_CFG_SRAM_16KB_0_DS_MASK | FW_CFG_SRAM_16KB_1_DS_MASK | FW_CFG_SRAM_32KB_DS_MASK |       \
		FW_CFG_SRAM_64KB_0_DS_MASK | FW_CFG_SRAM_64KB_1_DS_MASK |                          \
		FW_CFG_SRAM_64KB_2_DS_MASK

#define SRAM_NORMAL_SD_MASK                                                                        \
	FW_CFG_SRAM_16KB_0_SD_MASK | FW_CFG_SRAM_16KB_1_SD_MASK | FW_CFG_SRAM_32KB_SD_MASK |       \
		FW_CFG_SRAM_64KB_0_SD_MASK | FW_CFG_SRAM_64KB_1_SD_MASK |                          \
		FW_CFG_SRAM_64KB_2_SD_MASK

#endif /* ZEPHYR_SOC_ARM_REALTEK_RTS5817_DLINK_SYS_REG_H_ */
